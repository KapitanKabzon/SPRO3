
LCD_USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00000aac  00000b40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800146  00800146  00000b86  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000be4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009ec  00000000  00000000  00000ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000498  00000000  00000000  000016d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a8  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00001f10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002e7  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ce  00000000  00000000  0000239f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000276d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 20 01 	jmp	0x240	; 0x240 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ea       	ldi	r30, 0xAC	; 172
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 34       	cpi	r26, 0x46	; 70
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e4       	ldi	r26, 0x46	; 70
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c3 00 	call	0x186	; 0x186 <main>
  9e:	0c 94 54 05 	jmp	0xaa8	; 0xaa8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_load_byte>:
 *
 * Parameters: out_byte   The byte to load into the shift register
*/
void lcd_load_byte(uint8_t out_byte)
{
	LCD_PORT &= ~_BV(LCD_CLOCK_PIN);		// CLK = 0
  a6:	2c 98       	cbi	0x05, 4	; 5
  a8:	98 e0       	ldi	r25, 0x08	; 8
	for(unsigned char i=0; i<8; i++)		// 8 shift reg. bits
	{
		if (out_byte & 0x80)				// bit high
  aa:	88 23       	and	r24, r24
  ac:	14 f4       	brge	.+4      	; 0xb2 <lcd_load_byte+0xc>
			LCD_PORT |=_BV(LCD_RSDS_PIN);
  ae:	2d 9a       	sbi	0x05, 5	; 5
  b0:	01 c0       	rjmp	.+2      	; 0xb4 <lcd_load_byte+0xe>
		else
			LCD_PORT &= ~_BV(LCD_RSDS_PIN);	// bit low
  b2:	2d 98       	cbi	0x05, 5	; 5
		out_byte = out_byte << 1;
  b4:	88 0f       	add	r24, r24
		LCD_PORT |= _BV(LCD_CLOCK_PIN);		// strobe CLK
  b6:	2c 9a       	sbi	0x05, 4	; 5
		LCD_PORT &= ~_BV(LCD_CLOCK_PIN);
  b8:	2c 98       	cbi	0x05, 4	; 5
  ba:	91 50       	subi	r25, 0x01	; 1
 * Parameters: out_byte   The byte to load into the shift register
*/
void lcd_load_byte(uint8_t out_byte)
{
	LCD_PORT &= ~_BV(LCD_CLOCK_PIN);		// CLK = 0
	for(unsigned char i=0; i<8; i++)		// 8 shift reg. bits
  bc:	b1 f7       	brne	.-20     	; 0xaa <lcd_load_byte+0x4>
			LCD_PORT &= ~_BV(LCD_RSDS_PIN);	// bit low
		out_byte = out_byte << 1;
		LCD_PORT |= _BV(LCD_CLOCK_PIN);		// strobe CLK
		LCD_PORT &= ~_BV(LCD_CLOCK_PIN);
	}
}
  be:	08 95       	ret

000000c0 <strobe_E>:

/* Strobes the E signal on the LCD to read the byte from the 74HC164. */
void strobe_E(void)
{
	LCD_PORT |= _BV(LCD_ENABLE_PIN);		// E = 1
  c0:	28 9a       	sbi	0x05, 0	; 5
	LCD_PORT |= _BV(LCD_ENABLE_PIN);		// E = 1 twice to extend pulse
  c2:	28 9a       	sbi	0x05, 0	; 5
	LCD_PORT &= ~_BV(LCD_ENABLE_PIN);		// E = 0
  c4:	28 98       	cbi	0x05, 0	; 5
  c6:	08 95       	ret

000000c8 <displayControl>:
}

void displayControl(uint8_t cmd_byte)
{
	lcd_load_byte(cmd_byte);
  c8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_load_byte>
	LCD_PORT &= ~_BV(LCD_RSDS_PIN);  // RS = 0
  cc:	2d 98       	cbi	0x05, 5	; 5
	strobe_E();
  ce:	0e 94 60 00 	call	0xc0	; 0xc0 <strobe_E>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	85 ed       	ldi	r24, 0xD5	; 213
  d4:	8a 95       	dec	r24
  d6:	f1 f7       	brne	.-4      	; 0xd4 <displayControl+0xc>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <lcd_putc>:
 * Loads the byte into the shift register and then sends it to the LCD as a char
 * Parameters:   c               The byte (character) to display
*/
void lcd_putc( char c)
{
	lcd_load_byte(c);
  dc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_load_byte>
	LCD_PORT |= _BV(LCD_RSDS_PIN);		// RS = 1
  e0:	2d 9a       	sbi	0x05, 5	; 5
	strobe_E();
  e2:	0e 94 60 00 	call	0xc0	; 0xc0 <strobe_E>
  e6:	8a ee       	ldi	r24, 0xEA	; 234
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <lcd_putc+0xc>
  ec:	00 c0       	rjmp	.+0      	; 0xee <lcd_putc+0x12>
  ee:	08 95       	ret

000000f0 <putchr>:
/* putchr provides an interface to avr gcc stdio stdout to be used
   for formatted output with printf
*/
int putchr(char c, FILE *stream)
{
	lcd_putc(c);
  f0:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_putc>
 	return 0;
}
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	08 95       	ret

000000fa <lcd_home>:

/* Moves the cursor to the home position. */
void lcd_home()
{
	displayControl(0x02);
  fa:	82 e0       	ldi	r24, 0x02	; 2
  fc:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	8f e3       	ldi	r24, 0x3F	; 63
 102:	9f e1       	ldi	r25, 0x1F	; 31
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_home+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_home+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <lcd_init>:
	_delay_us(40);					// default "after command" delay
}

void lcd_init()
{
  DDRB = 0x31;
 10e:	81 e3       	ldi	r24, 0x31	; 49
 110:	84 b9       	out	0x04, r24	; 4
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	86 e7       	ldi	r24, 0x76	; 118
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <lcd_init+0xa>
 120:	00 c0       	rjmp	.+0      	; 0x122 <lcd_init+0x14>
 122:	00 00       	nop
	_delay_ms(30);			// 30ms power on delay for the DEM20231 LCD
	displayControl(0x38);	// display off
 124:	88 e3       	ldi	r24, 0x38	; 56
 126:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	displayControl(0x08);	// display off
 12a:	88 e0       	ldi	r24, 0x08	; 8
 12c:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	displayControl(0x01);	// Clear display
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 136:	8f e3       	ldi	r24, 0x3F	; 63
 138:	9f e1       	ldi	r25, 0x1F	; 31
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x2c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x32>
 140:	00 00       	nop
	_delay_ms(2);			// 2ms clear LCD delay for the DEM20231 LCD
	displayControl(0x06);	// entry mode set
 142:	86 e0       	ldi	r24, 0x06	; 6
 144:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	lcd_home();				// cursor home
 148:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_home>
	displayControl(0x0C);	// display ON
 14c:	8c e0       	ldi	r24, 0x0C	; 12
 14e:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 152:	08 95       	ret

00000154 <lcd_gotoxy>:

void lcd_gotoxy(uint8_t row, uint8_t position)
{
	unsigned char controlByte;
	controlByte = 0x80 + position - 1;
	switch (row)
 154:	81 30       	cpi	r24, 0x01	; 1
 156:	19 f0       	breq	.+6      	; 0x15e <lcd_gotoxy+0xa>
 158:	82 30       	cpi	r24, 0x02	; 2
 15a:	31 f0       	breq	.+12     	; 0x168 <lcd_gotoxy+0x14>
 15c:	08 95       	ret
	{
	 case 1 : displayControl(controlByte); break;
 15e:	8f e7       	ldi	r24, 0x7F	; 127
 160:	86 0f       	add	r24, r22
 162:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 166:	08 95       	ret
	 case 2 : displayControl(0x40+controlByte); break;
 168:	8f eb       	ldi	r24, 0xBF	; 191
 16a:	86 0f       	add	r24, r22
 16c:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 170:	08 95       	ret

00000172 <lcd_clear>:
// Input:  void
// Output: void

void lcd_clear(void)
{
	displayControl(0x01);
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 178:	8f e3       	ldi	r24, 0x3F	; 63
 17a:	9f e1       	ldi	r25, 0x1F	; 31
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <lcd_clear+0xa>
 180:	00 c0       	rjmp	.+0      	; 0x182 <lcd_clear+0x10>
 182:	00 00       	nop
 184:	08 95       	ret

00000186 <main>:
volatile char check;
int roomnr;

int main(void)
{
    uart_init();
 186:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <uart_init>
	io_redirect();
 18a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <io_redirect>
	lcd_init();
 18e:	0e 94 87 00 	call	0x10e	; 0x10e <lcd_init>
	sei();
 192:	78 94       	sei
	
	UCSR0B |= _BV(RXCIE0);
 194:	e1 ec       	ldi	r30, 0xC1	; 193
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 68       	ori	r24, 0x80	; 128
 19c:	80 83       	st	Z, r24
	
	printf("Hello world!");
 19e:	8a e2       	ldi	r24, 0x2A	; 42
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	0e 94 4b 02 	call	0x496	; 0x496 <printf>
	fprintf(&lcd_output, "Sup");
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	31 e0       	ldi	r19, 0x01	; 1
 1ae:	43 e0       	ldi	r20, 0x03	; 3
 1b0:	50 e0       	ldi	r21, 0x00	; 0
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	87 e3       	ldi	r24, 0x37	; 55
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	0e 94 17 02 	call	0x42e	; 0x42e <fwrite>
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
	while (1){
		if (check){
			strtok(data, "\n\r");
			roomnr = atoi(data);
			printf("%d\n", roomnr);
 1c2:	0f 2e       	mov	r0, r31
 1c4:	fe e3       	ldi	r31, 0x3E	; 62
 1c6:	ef 2e       	mov	r14, r31
 1c8:	f1 e0       	ldi	r31, 0x01	; 1
 1ca:	ff 2e       	mov	r15, r31
 1cc:	f0 2d       	mov	r31, r0
			lcd_clear();
			lcd_gotoxy(1,1);
			fprintf(&lcd_output, "%d", roomnr);
 1ce:	02 e4       	ldi	r16, 0x42	; 66
 1d0:	11 e0       	ldi	r17, 0x01	; 1
 1d2:	c0 e0       	ldi	r28, 0x00	; 0
 1d4:	d1 e0       	ldi	r29, 0x01	; 1
	UCSR0B |= _BV(RXCIE0);
	
	printf("Hello world!");
	fprintf(&lcd_output, "Sup");
	while (1){
		if (check){
 1d6:	80 91 48 01 	lds	r24, 0x0148
 1da:	88 23       	and	r24, r24
 1dc:	e1 f3       	breq	.-8      	; 0x1d6 <main+0x50>
			strtok(data, "\n\r");
 1de:	6b e3       	ldi	r22, 0x3B	; 59
 1e0:	71 e0       	ldi	r23, 0x01	; 1
 1e2:	89 e4       	ldi	r24, 0x49	; 73
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	0e 94 a5 01 	call	0x34a	; 0x34a <strtok>
			roomnr = atoi(data);
 1ea:	89 e4       	ldi	r24, 0x49	; 73
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	0e 94 87 01 	call	0x30e	; 0x30e <atoi>
 1f2:	80 93 53 01 	sts	0x0153, r24
 1f6:	90 93 54 01 	sts	0x0154, r25
			printf("%d\n", roomnr);
 1fa:	9f 93       	push	r25
 1fc:	8f 93       	push	r24
 1fe:	ff 92       	push	r15
 200:	ef 92       	push	r14
 202:	0e 94 4b 02 	call	0x496	; 0x496 <printf>
			lcd_clear();
 206:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_clear>
			lcd_gotoxy(1,1);
 20a:	61 e0       	ldi	r22, 0x01	; 1
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
			fprintf(&lcd_output, "%d", roomnr);
 212:	80 91 54 01 	lds	r24, 0x0154
 216:	8f 93       	push	r24
 218:	80 91 53 01 	lds	r24, 0x0153
 21c:	8f 93       	push	r24
 21e:	1f 93       	push	r17
 220:	0f 93       	push	r16
 222:	df 93       	push	r29
 224:	cf 93       	push	r28
 226:	0e 94 05 02 	call	0x40a	; 0x40a <fprintf>
			check = 0;
 22a:	10 92 48 01 	sts	0x0148, r1
 22e:	8d b7       	in	r24, 0x3d	; 61
 230:	9e b7       	in	r25, 0x3e	; 62
 232:	0a 96       	adiw	r24, 0x0a	; 10
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	9e bf       	out	0x3e, r25	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	8d bf       	out	0x3d, r24	; 61
 23e:	cb cf       	rjmp	.-106    	; 0x1d6 <main+0x50>

00000240 <__vector_18>:
		}
	}
}

ISR (USART_RX_vect)
{
 240:	1f 92       	push	r1
 242:	0f 92       	push	r0
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	0f 92       	push	r0
 248:	11 24       	eor	r1, r1
 24a:	2f 93       	push	r18
 24c:	3f 93       	push	r19
 24e:	4f 93       	push	r20
 250:	5f 93       	push	r21
 252:	6f 93       	push	r22
 254:	7f 93       	push	r23
 256:	8f 93       	push	r24
 258:	9f 93       	push	r25
 25a:	af 93       	push	r26
 25c:	bf 93       	push	r27
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
	fgets(data, 10, stdin);
 262:	40 91 55 01 	lds	r20, 0x0155
 266:	50 91 56 01 	lds	r21, 0x0156
 26a:	6a e0       	ldi	r22, 0x0A	; 10
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	89 e4       	ldi	r24, 0x49	; 73
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <fgets>
	check = UDR0;
 276:	80 91 c6 00 	lds	r24, 0x00C6
 27a:	80 93 48 01 	sts	0x0148, r24
	check = 1;
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 48 01 	sts	0x0148, r24
}
 284:	ff 91       	pop	r31
 286:	ef 91       	pop	r30
 288:	bf 91       	pop	r27
 28a:	af 91       	pop	r26
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	7f 91       	pop	r23
 292:	6f 91       	pop	r22
 294:	5f 91       	pop	r21
 296:	4f 91       	pop	r20
 298:	3f 91       	pop	r19
 29a:	2f 91       	pop	r18
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
 2a6:	cf 93       	push	r28
 2a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 2aa:	8a 30       	cpi	r24, 0x0A	; 10
 2ac:	19 f4       	brne	.+6      	; 0x2b4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 2ae:	8d e0       	ldi	r24, 0x0D	; 13
 2b0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 2b4:	e0 ec       	ldi	r30, 0xC0	; 192
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	90 81       	ld	r25, Z
 2ba:	95 ff       	sbrs	r25, 5
 2bc:	fd cf       	rjmp	.-6      	; 0x2b8 <uart_putchar+0x12>
	UDR0 = c;
 2be:	c0 93 c6 00 	sts	0x00C6, r28
}
 2c2:	cf 91       	pop	r28
 2c4:	08 95       	ret

000002c6 <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 2c6:	e0 ec       	ldi	r30, 0xC0	; 192
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	88 23       	and	r24, r24
 2ce:	ec f7       	brge	.-6      	; 0x2ca <uart_getchar+0x4>
	return UDR0;
 2d0:	80 91 c6 00 	lds	r24, 0x00C6
 2d4:	08 95       	ret

000002d6 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
 2d6:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;
 2da:	87 e6       	ldi	r24, 0x67	; 103
 2dc:	80 93 c4 00 	sts	0x00C4, r24
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 2e0:	e0 ec       	ldi	r30, 0xC0	; 192
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	8d 7f       	andi	r24, 0xFD	; 253
 2e8:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 2ea:	86 e0       	ldi	r24, 0x06	; 6
 2ec:	80 93 c2 00 	sts	0x00C2, r24
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 2f0:	88 e1       	ldi	r24, 0x18	; 24
 2f2:	80 93 c1 00 	sts	0x00C1, r24
 2f6:	08 95       	ret

000002f8 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
 2f8:	e5 e5       	ldi	r30, 0x55	; 85
 2fa:	f1 e0       	ldi	r31, 0x01	; 1
 2fc:	8c e1       	ldi	r24, 0x1C	; 28
 2fe:	91 e0       	ldi	r25, 0x01	; 1
 300:	93 83       	std	Z+3, r25	; 0x03
 302:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
 304:	8e e0       	ldi	r24, 0x0E	; 14
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	91 83       	std	Z+1, r25	; 0x01
 30a:	80 83       	st	Z, r24
 30c:	08 95       	ret

0000030e <atoi>:
 30e:	fc 01       	movw	r30, r24
 310:	88 27       	eor	r24, r24
 312:	99 27       	eor	r25, r25
 314:	e8 94       	clt
 316:	21 91       	ld	r18, Z+
 318:	20 32       	cpi	r18, 0x20	; 32
 31a:	e9 f3       	breq	.-6      	; 0x316 <atoi+0x8>
 31c:	29 30       	cpi	r18, 0x09	; 9
 31e:	10 f0       	brcs	.+4      	; 0x324 <atoi+0x16>
 320:	2e 30       	cpi	r18, 0x0E	; 14
 322:	c8 f3       	brcs	.-14     	; 0x316 <atoi+0x8>
 324:	2b 32       	cpi	r18, 0x2B	; 43
 326:	41 f0       	breq	.+16     	; 0x338 <atoi+0x2a>
 328:	2d 32       	cpi	r18, 0x2D	; 45
 32a:	39 f4       	brne	.+14     	; 0x33a <atoi+0x2c>
 32c:	68 94       	set
 32e:	04 c0       	rjmp	.+8      	; 0x338 <atoi+0x2a>
 330:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulhi_const_10>
 334:	82 0f       	add	r24, r18
 336:	91 1d       	adc	r25, r1
 338:	21 91       	ld	r18, Z+
 33a:	20 53       	subi	r18, 0x30	; 48
 33c:	2a 30       	cpi	r18, 0x0A	; 10
 33e:	c0 f3       	brcs	.-16     	; 0x330 <atoi+0x22>
 340:	1e f4       	brtc	.+6      	; 0x348 <atoi+0x3a>
 342:	90 95       	com	r25
 344:	81 95       	neg	r24
 346:	9f 4f       	sbci	r25, 0xFF	; 255
 348:	08 95       	ret

0000034a <strtok>:
 34a:	46 e4       	ldi	r20, 0x46	; 70
 34c:	51 e0       	ldi	r21, 0x01	; 1
 34e:	0e 94 aa 01 	call	0x354	; 0x354 <strtok_r>
 352:	08 95       	ret

00000354 <strtok_r>:
 354:	fa 01       	movw	r30, r20
 356:	a1 91       	ld	r26, Z+
 358:	b0 81       	ld	r27, Z
 35a:	00 97       	sbiw	r24, 0x00	; 0
 35c:	19 f4       	brne	.+6      	; 0x364 <strtok_r+0x10>
 35e:	10 97       	sbiw	r26, 0x00	; 0
 360:	e1 f0       	breq	.+56     	; 0x39a <strtok_r+0x46>
 362:	cd 01       	movw	r24, r26
 364:	dc 01       	movw	r26, r24
 366:	cd 01       	movw	r24, r26
 368:	0d 90       	ld	r0, X+
 36a:	00 20       	and	r0, r0
 36c:	11 f4       	brne	.+4      	; 0x372 <strtok_r+0x1e>
 36e:	c0 01       	movw	r24, r0
 370:	13 c0       	rjmp	.+38     	; 0x398 <strtok_r+0x44>
 372:	fb 01       	movw	r30, r22
 374:	21 91       	ld	r18, Z+
 376:	22 23       	and	r18, r18
 378:	19 f0       	breq	.+6      	; 0x380 <strtok_r+0x2c>
 37a:	20 15       	cp	r18, r0
 37c:	d9 f7       	brne	.-10     	; 0x374 <strtok_r+0x20>
 37e:	f3 cf       	rjmp	.-26     	; 0x366 <strtok_r+0x12>
 380:	fb 01       	movw	r30, r22
 382:	21 91       	ld	r18, Z+
 384:	20 15       	cp	r18, r0
 386:	19 f4       	brne	.+6      	; 0x38e <strtok_r+0x3a>
 388:	1e 92       	st	-X, r1
 38a:	11 96       	adiw	r26, 0x01	; 1
 38c:	06 c0       	rjmp	.+12     	; 0x39a <strtok_r+0x46>
 38e:	22 23       	and	r18, r18
 390:	c1 f7       	brne	.-16     	; 0x382 <strtok_r+0x2e>
 392:	0d 90       	ld	r0, X+
 394:	00 20       	and	r0, r0
 396:	a1 f7       	brne	.-24     	; 0x380 <strtok_r+0x2c>
 398:	d0 01       	movw	r26, r0
 39a:	fa 01       	movw	r30, r20
 39c:	a1 93       	st	Z+, r26
 39e:	b0 83       	st	Z, r27
 3a0:	08 95       	ret

000003a2 <__mulhi_const_10>:
 3a2:	7a e0       	ldi	r23, 0x0A	; 10
 3a4:	97 9f       	mul	r25, r23
 3a6:	90 2d       	mov	r25, r0
 3a8:	87 9f       	mul	r24, r23
 3aa:	80 2d       	mov	r24, r0
 3ac:	91 0d       	add	r25, r1
 3ae:	11 24       	eor	r1, r1
 3b0:	08 95       	ret

000003b2 <fgets>:
 3b2:	a0 e0       	ldi	r26, 0x00	; 0
 3b4:	b0 e0       	ldi	r27, 0x00	; 0
 3b6:	ef ed       	ldi	r30, 0xDF	; 223
 3b8:	f1 e0       	ldi	r31, 0x01	; 1
 3ba:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__prologue_saves__+0x14>
 3be:	fa 01       	movw	r30, r20
 3c0:	23 81       	ldd	r18, Z+3	; 0x03
 3c2:	20 fd       	sbrc	r18, 0
 3c4:	03 c0       	rjmp	.+6      	; 0x3cc <fgets+0x1a>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	1a c0       	rjmp	.+52     	; 0x400 <fgets+0x4e>
 3cc:	16 16       	cp	r1, r22
 3ce:	17 06       	cpc	r1, r23
 3d0:	d4 f7       	brge	.-12     	; 0x3c6 <fgets+0x14>
 3d2:	7a 01       	movw	r14, r20
 3d4:	8c 01       	movw	r16, r24
 3d6:	eb 01       	movw	r28, r22
 3d8:	6c 01       	movw	r12, r24
 3da:	c1 30       	cpi	r28, 0x01	; 1
 3dc:	d1 05       	cpc	r29, r1
 3de:	69 f0       	breq	.+26     	; 0x3fa <fgets+0x48>
 3e0:	c7 01       	movw	r24, r14
 3e2:	0e 94 49 04 	call	0x892	; 0x892 <fgetc>
 3e6:	8f 3f       	cpi	r24, 0xFF	; 255
 3e8:	ff ef       	ldi	r31, 0xFF	; 255
 3ea:	9f 07       	cpc	r25, r31
 3ec:	61 f3       	breq	.-40     	; 0x3c6 <fgets+0x14>
 3ee:	f6 01       	movw	r30, r12
 3f0:	81 93       	st	Z+, r24
 3f2:	6f 01       	movw	r12, r30
 3f4:	21 97       	sbiw	r28, 0x01	; 1
 3f6:	0a 97       	sbiw	r24, 0x0a	; 10
 3f8:	81 f7       	brne	.-32     	; 0x3da <fgets+0x28>
 3fa:	f6 01       	movw	r30, r12
 3fc:	10 82       	st	Z, r1
 3fe:	c8 01       	movw	r24, r16
 400:	cd b7       	in	r28, 0x3d	; 61
 402:	de b7       	in	r29, 0x3e	; 62
 404:	e8 e0       	ldi	r30, 0x08	; 8
 406:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__epilogue_restores__+0x14>

0000040a <fprintf>:
 40a:	a0 e0       	ldi	r26, 0x00	; 0
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	eb e0       	ldi	r30, 0x0B	; 11
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <__prologue_saves__+0x20>
 416:	ae 01       	movw	r20, r28
 418:	47 5f       	subi	r20, 0xF7	; 247
 41a:	5f 4f       	sbci	r21, 0xFF	; 255
 41c:	6f 81       	ldd	r22, Y+7	; 0x07
 41e:	78 85       	ldd	r23, Y+8	; 0x08
 420:	8d 81       	ldd	r24, Y+5	; 0x05
 422:	9e 81       	ldd	r25, Y+6	; 0x06
 424:	0e 94 61 02 	call	0x4c2	; 0x4c2 <vfprintf>
 428:	e2 e0       	ldi	r30, 0x02	; 2
 42a:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__epilogue_restores__+0x20>

0000042e <fwrite>:
 42e:	a0 e0       	ldi	r26, 0x00	; 0
 430:	b0 e0       	ldi	r27, 0x00	; 0
 432:	ed e1       	ldi	r30, 0x1D	; 29
 434:	f2 e0       	ldi	r31, 0x02	; 2
 436:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__prologue_saves__+0xc>
 43a:	5b 01       	movw	r10, r22
 43c:	4a 01       	movw	r8, r20
 43e:	79 01       	movw	r14, r18
 440:	d9 01       	movw	r26, r18
 442:	13 96       	adiw	r26, 0x03	; 3
 444:	2c 91       	ld	r18, X
 446:	21 ff       	sbrs	r18, 1
 448:	1d c0       	rjmp	.+58     	; 0x484 <fwrite+0x56>
 44a:	c0 e0       	ldi	r28, 0x00	; 0
 44c:	d0 e0       	ldi	r29, 0x00	; 0
 44e:	c8 15       	cp	r28, r8
 450:	d9 05       	cpc	r29, r9
 452:	d9 f0       	breq	.+54     	; 0x48a <fwrite+0x5c>
 454:	8c 01       	movw	r16, r24
 456:	6c 01       	movw	r12, r24
 458:	ca 0c       	add	r12, r10
 45a:	db 1c       	adc	r13, r11
 45c:	c8 01       	movw	r24, r16
 45e:	0c 15       	cp	r16, r12
 460:	1d 05       	cpc	r17, r13
 462:	71 f0       	breq	.+28     	; 0x480 <fwrite+0x52>
 464:	0f 5f       	subi	r16, 0xFF	; 255
 466:	1f 4f       	sbci	r17, 0xFF	; 255
 468:	d7 01       	movw	r26, r14
 46a:	18 96       	adiw	r26, 0x08	; 8
 46c:	ed 91       	ld	r30, X+
 46e:	fc 91       	ld	r31, X
 470:	19 97       	sbiw	r26, 0x09	; 9
 472:	b7 01       	movw	r22, r14
 474:	dc 01       	movw	r26, r24
 476:	8c 91       	ld	r24, X
 478:	09 95       	icall
 47a:	89 2b       	or	r24, r25
 47c:	79 f3       	breq	.-34     	; 0x45c <fwrite+0x2e>
 47e:	05 c0       	rjmp	.+10     	; 0x48a <fwrite+0x5c>
 480:	21 96       	adiw	r28, 0x01	; 1
 482:	e5 cf       	rjmp	.-54     	; 0x44e <fwrite+0x20>
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	01 c0       	rjmp	.+2      	; 0x48c <fwrite+0x5e>
 48a:	ce 01       	movw	r24, r28
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
 490:	ec e0       	ldi	r30, 0x0C	; 12
 492:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__epilogue_restores__+0xc>

00000496 <printf>:
 496:	a0 e0       	ldi	r26, 0x00	; 0
 498:	b0 e0       	ldi	r27, 0x00	; 0
 49a:	e1 e5       	ldi	r30, 0x51	; 81
 49c:	f2 e0       	ldi	r31, 0x02	; 2
 49e:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <__prologue_saves__+0x20>
 4a2:	ae 01       	movw	r20, r28
 4a4:	4b 5f       	subi	r20, 0xFB	; 251
 4a6:	5f 4f       	sbci	r21, 0xFF	; 255
 4a8:	fa 01       	movw	r30, r20
 4aa:	61 91       	ld	r22, Z+
 4ac:	71 91       	ld	r23, Z+
 4ae:	af 01       	movw	r20, r30
 4b0:	80 91 57 01 	lds	r24, 0x0157
 4b4:	90 91 58 01 	lds	r25, 0x0158
 4b8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <vfprintf>
 4bc:	e2 e0       	ldi	r30, 0x02	; 2
 4be:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__epilogue_restores__+0x20>

000004c2 <vfprintf>:
 4c2:	ac e0       	ldi	r26, 0x0C	; 12
 4c4:	b0 e0       	ldi	r27, 0x00	; 0
 4c6:	e7 e6       	ldi	r30, 0x67	; 103
 4c8:	f2 e0       	ldi	r31, 0x02	; 2
 4ca:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__prologue_saves__>
 4ce:	7c 01       	movw	r14, r24
 4d0:	6b 01       	movw	r12, r22
 4d2:	8a 01       	movw	r16, r20
 4d4:	fc 01       	movw	r30, r24
 4d6:	17 82       	std	Z+7, r1	; 0x07
 4d8:	16 82       	std	Z+6, r1	; 0x06
 4da:	83 81       	ldd	r24, Z+3	; 0x03
 4dc:	81 ff       	sbrs	r24, 1
 4de:	bd c1       	rjmp	.+890    	; 0x85a <vfprintf+0x398>
 4e0:	ce 01       	movw	r24, r28
 4e2:	01 96       	adiw	r24, 0x01	; 1
 4e4:	4c 01       	movw	r8, r24
 4e6:	f7 01       	movw	r30, r14
 4e8:	93 81       	ldd	r25, Z+3	; 0x03
 4ea:	f6 01       	movw	r30, r12
 4ec:	93 fd       	sbrc	r25, 3
 4ee:	85 91       	lpm	r24, Z+
 4f0:	93 ff       	sbrs	r25, 3
 4f2:	81 91       	ld	r24, Z+
 4f4:	6f 01       	movw	r12, r30
 4f6:	88 23       	and	r24, r24
 4f8:	09 f4       	brne	.+2      	; 0x4fc <vfprintf+0x3a>
 4fa:	ab c1       	rjmp	.+854    	; 0x852 <vfprintf+0x390>
 4fc:	85 32       	cpi	r24, 0x25	; 37
 4fe:	39 f4       	brne	.+14     	; 0x50e <vfprintf+0x4c>
 500:	93 fd       	sbrc	r25, 3
 502:	85 91       	lpm	r24, Z+
 504:	93 ff       	sbrs	r25, 3
 506:	81 91       	ld	r24, Z+
 508:	6f 01       	movw	r12, r30
 50a:	85 32       	cpi	r24, 0x25	; 37
 50c:	29 f4       	brne	.+10     	; 0x518 <vfprintf+0x56>
 50e:	b7 01       	movw	r22, r14
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 516:	e7 cf       	rjmp	.-50     	; 0x4e6 <vfprintf+0x24>
 518:	51 2c       	mov	r5, r1
 51a:	31 2c       	mov	r3, r1
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	20 32       	cpi	r18, 0x20	; 32
 520:	a0 f4       	brcc	.+40     	; 0x54a <vfprintf+0x88>
 522:	8b 32       	cpi	r24, 0x2B	; 43
 524:	69 f0       	breq	.+26     	; 0x540 <vfprintf+0x7e>
 526:	30 f4       	brcc	.+12     	; 0x534 <vfprintf+0x72>
 528:	80 32       	cpi	r24, 0x20	; 32
 52a:	59 f0       	breq	.+22     	; 0x542 <vfprintf+0x80>
 52c:	83 32       	cpi	r24, 0x23	; 35
 52e:	69 f4       	brne	.+26     	; 0x54a <vfprintf+0x88>
 530:	20 61       	ori	r18, 0x10	; 16
 532:	2c c0       	rjmp	.+88     	; 0x58c <vfprintf+0xca>
 534:	8d 32       	cpi	r24, 0x2D	; 45
 536:	39 f0       	breq	.+14     	; 0x546 <vfprintf+0x84>
 538:	80 33       	cpi	r24, 0x30	; 48
 53a:	39 f4       	brne	.+14     	; 0x54a <vfprintf+0x88>
 53c:	21 60       	ori	r18, 0x01	; 1
 53e:	26 c0       	rjmp	.+76     	; 0x58c <vfprintf+0xca>
 540:	22 60       	ori	r18, 0x02	; 2
 542:	24 60       	ori	r18, 0x04	; 4
 544:	23 c0       	rjmp	.+70     	; 0x58c <vfprintf+0xca>
 546:	28 60       	ori	r18, 0x08	; 8
 548:	21 c0       	rjmp	.+66     	; 0x58c <vfprintf+0xca>
 54a:	27 fd       	sbrc	r18, 7
 54c:	27 c0       	rjmp	.+78     	; 0x59c <vfprintf+0xda>
 54e:	30 ed       	ldi	r19, 0xD0	; 208
 550:	38 0f       	add	r19, r24
 552:	3a 30       	cpi	r19, 0x0A	; 10
 554:	78 f4       	brcc	.+30     	; 0x574 <vfprintf+0xb2>
 556:	26 ff       	sbrs	r18, 6
 558:	06 c0       	rjmp	.+12     	; 0x566 <vfprintf+0xa4>
 55a:	fa e0       	ldi	r31, 0x0A	; 10
 55c:	5f 9e       	mul	r5, r31
 55e:	30 0d       	add	r19, r0
 560:	11 24       	eor	r1, r1
 562:	53 2e       	mov	r5, r19
 564:	13 c0       	rjmp	.+38     	; 0x58c <vfprintf+0xca>
 566:	8a e0       	ldi	r24, 0x0A	; 10
 568:	38 9e       	mul	r3, r24
 56a:	30 0d       	add	r19, r0
 56c:	11 24       	eor	r1, r1
 56e:	33 2e       	mov	r3, r19
 570:	20 62       	ori	r18, 0x20	; 32
 572:	0c c0       	rjmp	.+24     	; 0x58c <vfprintf+0xca>
 574:	8e 32       	cpi	r24, 0x2E	; 46
 576:	21 f4       	brne	.+8      	; 0x580 <vfprintf+0xbe>
 578:	26 fd       	sbrc	r18, 6
 57a:	6b c1       	rjmp	.+726    	; 0x852 <vfprintf+0x390>
 57c:	20 64       	ori	r18, 0x40	; 64
 57e:	06 c0       	rjmp	.+12     	; 0x58c <vfprintf+0xca>
 580:	8c 36       	cpi	r24, 0x6C	; 108
 582:	11 f4       	brne	.+4      	; 0x588 <vfprintf+0xc6>
 584:	20 68       	ori	r18, 0x80	; 128
 586:	02 c0       	rjmp	.+4      	; 0x58c <vfprintf+0xca>
 588:	88 36       	cpi	r24, 0x68	; 104
 58a:	41 f4       	brne	.+16     	; 0x59c <vfprintf+0xda>
 58c:	f6 01       	movw	r30, r12
 58e:	93 fd       	sbrc	r25, 3
 590:	85 91       	lpm	r24, Z+
 592:	93 ff       	sbrs	r25, 3
 594:	81 91       	ld	r24, Z+
 596:	6f 01       	movw	r12, r30
 598:	81 11       	cpse	r24, r1
 59a:	c1 cf       	rjmp	.-126    	; 0x51e <vfprintf+0x5c>
 59c:	98 2f       	mov	r25, r24
 59e:	9f 7d       	andi	r25, 0xDF	; 223
 5a0:	95 54       	subi	r25, 0x45	; 69
 5a2:	93 30       	cpi	r25, 0x03	; 3
 5a4:	28 f4       	brcc	.+10     	; 0x5b0 <vfprintf+0xee>
 5a6:	0c 5f       	subi	r16, 0xFC	; 252
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	ff e3       	ldi	r31, 0x3F	; 63
 5ac:	f9 83       	std	Y+1, r31	; 0x01
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <vfprintf+0x108>
 5b0:	83 36       	cpi	r24, 0x63	; 99
 5b2:	31 f0       	breq	.+12     	; 0x5c0 <vfprintf+0xfe>
 5b4:	83 37       	cpi	r24, 0x73	; 115
 5b6:	71 f0       	breq	.+28     	; 0x5d4 <vfprintf+0x112>
 5b8:	83 35       	cpi	r24, 0x53	; 83
 5ba:	09 f0       	breq	.+2      	; 0x5be <vfprintf+0xfc>
 5bc:	5b c0       	rjmp	.+182    	; 0x674 <vfprintf+0x1b2>
 5be:	22 c0       	rjmp	.+68     	; 0x604 <vfprintf+0x142>
 5c0:	f8 01       	movw	r30, r16
 5c2:	80 81       	ld	r24, Z
 5c4:	89 83       	std	Y+1, r24	; 0x01
 5c6:	0e 5f       	subi	r16, 0xFE	; 254
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	44 24       	eor	r4, r4
 5cc:	43 94       	inc	r4
 5ce:	51 2c       	mov	r5, r1
 5d0:	54 01       	movw	r10, r8
 5d2:	15 c0       	rjmp	.+42     	; 0x5fe <vfprintf+0x13c>
 5d4:	38 01       	movw	r6, r16
 5d6:	f2 e0       	ldi	r31, 0x02	; 2
 5d8:	6f 0e       	add	r6, r31
 5da:	71 1c       	adc	r7, r1
 5dc:	f8 01       	movw	r30, r16
 5de:	a0 80       	ld	r10, Z
 5e0:	b1 80       	ldd	r11, Z+1	; 0x01
 5e2:	26 ff       	sbrs	r18, 6
 5e4:	03 c0       	rjmp	.+6      	; 0x5ec <vfprintf+0x12a>
 5e6:	65 2d       	mov	r22, r5
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <vfprintf+0x12e>
 5ec:	6f ef       	ldi	r22, 0xFF	; 255
 5ee:	7f ef       	ldi	r23, 0xFF	; 255
 5f0:	c5 01       	movw	r24, r10
 5f2:	2c 87       	std	Y+12, r18	; 0x0c
 5f4:	0e 94 3e 04 	call	0x87c	; 0x87c <strnlen>
 5f8:	2c 01       	movw	r4, r24
 5fa:	83 01       	movw	r16, r6
 5fc:	2c 85       	ldd	r18, Y+12	; 0x0c
 5fe:	2f 77       	andi	r18, 0x7F	; 127
 600:	22 2e       	mov	r2, r18
 602:	17 c0       	rjmp	.+46     	; 0x632 <vfprintf+0x170>
 604:	38 01       	movw	r6, r16
 606:	f2 e0       	ldi	r31, 0x02	; 2
 608:	6f 0e       	add	r6, r31
 60a:	71 1c       	adc	r7, r1
 60c:	f8 01       	movw	r30, r16
 60e:	a0 80       	ld	r10, Z
 610:	b1 80       	ldd	r11, Z+1	; 0x01
 612:	26 ff       	sbrs	r18, 6
 614:	03 c0       	rjmp	.+6      	; 0x61c <vfprintf+0x15a>
 616:	65 2d       	mov	r22, r5
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <vfprintf+0x15e>
 61c:	6f ef       	ldi	r22, 0xFF	; 255
 61e:	7f ef       	ldi	r23, 0xFF	; 255
 620:	c5 01       	movw	r24, r10
 622:	2c 87       	std	Y+12, r18	; 0x0c
 624:	0e 94 33 04 	call	0x866	; 0x866 <strnlen_P>
 628:	2c 01       	movw	r4, r24
 62a:	2c 85       	ldd	r18, Y+12	; 0x0c
 62c:	20 68       	ori	r18, 0x80	; 128
 62e:	22 2e       	mov	r2, r18
 630:	83 01       	movw	r16, r6
 632:	23 fc       	sbrc	r2, 3
 634:	1b c0       	rjmp	.+54     	; 0x66c <vfprintf+0x1aa>
 636:	83 2d       	mov	r24, r3
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	48 16       	cp	r4, r24
 63c:	59 06       	cpc	r5, r25
 63e:	b0 f4       	brcc	.+44     	; 0x66c <vfprintf+0x1aa>
 640:	b7 01       	movw	r22, r14
 642:	80 e2       	ldi	r24, 0x20	; 32
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 64a:	3a 94       	dec	r3
 64c:	f4 cf       	rjmp	.-24     	; 0x636 <vfprintf+0x174>
 64e:	f5 01       	movw	r30, r10
 650:	27 fc       	sbrc	r2, 7
 652:	85 91       	lpm	r24, Z+
 654:	27 fe       	sbrs	r2, 7
 656:	81 91       	ld	r24, Z+
 658:	5f 01       	movw	r10, r30
 65a:	b7 01       	movw	r22, r14
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 662:	31 10       	cpse	r3, r1
 664:	3a 94       	dec	r3
 666:	f1 e0       	ldi	r31, 0x01	; 1
 668:	4f 1a       	sub	r4, r31
 66a:	51 08       	sbc	r5, r1
 66c:	41 14       	cp	r4, r1
 66e:	51 04       	cpc	r5, r1
 670:	71 f7       	brne	.-36     	; 0x64e <vfprintf+0x18c>
 672:	e5 c0       	rjmp	.+458    	; 0x83e <vfprintf+0x37c>
 674:	84 36       	cpi	r24, 0x64	; 100
 676:	11 f0       	breq	.+4      	; 0x67c <vfprintf+0x1ba>
 678:	89 36       	cpi	r24, 0x69	; 105
 67a:	39 f5       	brne	.+78     	; 0x6ca <vfprintf+0x208>
 67c:	f8 01       	movw	r30, r16
 67e:	27 ff       	sbrs	r18, 7
 680:	07 c0       	rjmp	.+14     	; 0x690 <vfprintf+0x1ce>
 682:	60 81       	ld	r22, Z
 684:	71 81       	ldd	r23, Z+1	; 0x01
 686:	82 81       	ldd	r24, Z+2	; 0x02
 688:	93 81       	ldd	r25, Z+3	; 0x03
 68a:	0c 5f       	subi	r16, 0xFC	; 252
 68c:	1f 4f       	sbci	r17, 0xFF	; 255
 68e:	08 c0       	rjmp	.+16     	; 0x6a0 <vfprintf+0x1de>
 690:	60 81       	ld	r22, Z
 692:	71 81       	ldd	r23, Z+1	; 0x01
 694:	07 2e       	mov	r0, r23
 696:	00 0c       	add	r0, r0
 698:	88 0b       	sbc	r24, r24
 69a:	99 0b       	sbc	r25, r25
 69c:	0e 5f       	subi	r16, 0xFE	; 254
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	2f 76       	andi	r18, 0x6F	; 111
 6a2:	72 2e       	mov	r7, r18
 6a4:	97 ff       	sbrs	r25, 7
 6a6:	09 c0       	rjmp	.+18     	; 0x6ba <vfprintf+0x1f8>
 6a8:	90 95       	com	r25
 6aa:	80 95       	com	r24
 6ac:	70 95       	com	r23
 6ae:	61 95       	neg	r22
 6b0:	7f 4f       	sbci	r23, 0xFF	; 255
 6b2:	8f 4f       	sbci	r24, 0xFF	; 255
 6b4:	9f 4f       	sbci	r25, 0xFF	; 255
 6b6:	20 68       	ori	r18, 0x80	; 128
 6b8:	72 2e       	mov	r7, r18
 6ba:	2a e0       	ldi	r18, 0x0A	; 10
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	a4 01       	movw	r20, r8
 6c0:	0e 94 bf 04 	call	0x97e	; 0x97e <__ultoa_invert>
 6c4:	a8 2e       	mov	r10, r24
 6c6:	a8 18       	sub	r10, r8
 6c8:	44 c0       	rjmp	.+136    	; 0x752 <vfprintf+0x290>
 6ca:	85 37       	cpi	r24, 0x75	; 117
 6cc:	29 f4       	brne	.+10     	; 0x6d8 <vfprintf+0x216>
 6ce:	2f 7e       	andi	r18, 0xEF	; 239
 6d0:	b2 2e       	mov	r11, r18
 6d2:	2a e0       	ldi	r18, 0x0A	; 10
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	25 c0       	rjmp	.+74     	; 0x722 <vfprintf+0x260>
 6d8:	f2 2f       	mov	r31, r18
 6da:	f9 7f       	andi	r31, 0xF9	; 249
 6dc:	bf 2e       	mov	r11, r31
 6de:	8f 36       	cpi	r24, 0x6F	; 111
 6e0:	c1 f0       	breq	.+48     	; 0x712 <vfprintf+0x250>
 6e2:	18 f4       	brcc	.+6      	; 0x6ea <vfprintf+0x228>
 6e4:	88 35       	cpi	r24, 0x58	; 88
 6e6:	79 f0       	breq	.+30     	; 0x706 <vfprintf+0x244>
 6e8:	b4 c0       	rjmp	.+360    	; 0x852 <vfprintf+0x390>
 6ea:	80 37       	cpi	r24, 0x70	; 112
 6ec:	19 f0       	breq	.+6      	; 0x6f4 <vfprintf+0x232>
 6ee:	88 37       	cpi	r24, 0x78	; 120
 6f0:	21 f0       	breq	.+8      	; 0x6fa <vfprintf+0x238>
 6f2:	af c0       	rjmp	.+350    	; 0x852 <vfprintf+0x390>
 6f4:	2f 2f       	mov	r18, r31
 6f6:	20 61       	ori	r18, 0x10	; 16
 6f8:	b2 2e       	mov	r11, r18
 6fa:	b4 fe       	sbrs	r11, 4
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x256>
 6fe:	8b 2d       	mov	r24, r11
 700:	84 60       	ori	r24, 0x04	; 4
 702:	b8 2e       	mov	r11, r24
 704:	09 c0       	rjmp	.+18     	; 0x718 <vfprintf+0x256>
 706:	24 ff       	sbrs	r18, 4
 708:	0a c0       	rjmp	.+20     	; 0x71e <vfprintf+0x25c>
 70a:	9f 2f       	mov	r25, r31
 70c:	96 60       	ori	r25, 0x06	; 6
 70e:	b9 2e       	mov	r11, r25
 710:	06 c0       	rjmp	.+12     	; 0x71e <vfprintf+0x25c>
 712:	28 e0       	ldi	r18, 0x08	; 8
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	05 c0       	rjmp	.+10     	; 0x722 <vfprintf+0x260>
 718:	20 e1       	ldi	r18, 0x10	; 16
 71a:	30 e0       	ldi	r19, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <vfprintf+0x260>
 71e:	20 e1       	ldi	r18, 0x10	; 16
 720:	32 e0       	ldi	r19, 0x02	; 2
 722:	f8 01       	movw	r30, r16
 724:	b7 fe       	sbrs	r11, 7
 726:	07 c0       	rjmp	.+14     	; 0x736 <vfprintf+0x274>
 728:	60 81       	ld	r22, Z
 72a:	71 81       	ldd	r23, Z+1	; 0x01
 72c:	82 81       	ldd	r24, Z+2	; 0x02
 72e:	93 81       	ldd	r25, Z+3	; 0x03
 730:	0c 5f       	subi	r16, 0xFC	; 252
 732:	1f 4f       	sbci	r17, 0xFF	; 255
 734:	06 c0       	rjmp	.+12     	; 0x742 <vfprintf+0x280>
 736:	60 81       	ld	r22, Z
 738:	71 81       	ldd	r23, Z+1	; 0x01
 73a:	80 e0       	ldi	r24, 0x00	; 0
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 5f       	subi	r16, 0xFE	; 254
 740:	1f 4f       	sbci	r17, 0xFF	; 255
 742:	a4 01       	movw	r20, r8
 744:	0e 94 bf 04 	call	0x97e	; 0x97e <__ultoa_invert>
 748:	a8 2e       	mov	r10, r24
 74a:	a8 18       	sub	r10, r8
 74c:	fb 2d       	mov	r31, r11
 74e:	ff 77       	andi	r31, 0x7F	; 127
 750:	7f 2e       	mov	r7, r31
 752:	76 fe       	sbrs	r7, 6
 754:	0b c0       	rjmp	.+22     	; 0x76c <vfprintf+0x2aa>
 756:	37 2d       	mov	r19, r7
 758:	3e 7f       	andi	r19, 0xFE	; 254
 75a:	a5 14       	cp	r10, r5
 75c:	50 f4       	brcc	.+20     	; 0x772 <vfprintf+0x2b0>
 75e:	74 fe       	sbrs	r7, 4
 760:	0a c0       	rjmp	.+20     	; 0x776 <vfprintf+0x2b4>
 762:	72 fc       	sbrc	r7, 2
 764:	08 c0       	rjmp	.+16     	; 0x776 <vfprintf+0x2b4>
 766:	37 2d       	mov	r19, r7
 768:	3e 7e       	andi	r19, 0xEE	; 238
 76a:	05 c0       	rjmp	.+10     	; 0x776 <vfprintf+0x2b4>
 76c:	ba 2c       	mov	r11, r10
 76e:	37 2d       	mov	r19, r7
 770:	03 c0       	rjmp	.+6      	; 0x778 <vfprintf+0x2b6>
 772:	ba 2c       	mov	r11, r10
 774:	01 c0       	rjmp	.+2      	; 0x778 <vfprintf+0x2b6>
 776:	b5 2c       	mov	r11, r5
 778:	34 ff       	sbrs	r19, 4
 77a:	0d c0       	rjmp	.+26     	; 0x796 <vfprintf+0x2d4>
 77c:	fe 01       	movw	r30, r28
 77e:	ea 0d       	add	r30, r10
 780:	f1 1d       	adc	r31, r1
 782:	80 81       	ld	r24, Z
 784:	80 33       	cpi	r24, 0x30	; 48
 786:	11 f4       	brne	.+4      	; 0x78c <vfprintf+0x2ca>
 788:	39 7e       	andi	r19, 0xE9	; 233
 78a:	09 c0       	rjmp	.+18     	; 0x79e <vfprintf+0x2dc>
 78c:	32 ff       	sbrs	r19, 2
 78e:	06 c0       	rjmp	.+12     	; 0x79c <vfprintf+0x2da>
 790:	b3 94       	inc	r11
 792:	b3 94       	inc	r11
 794:	04 c0       	rjmp	.+8      	; 0x79e <vfprintf+0x2dc>
 796:	83 2f       	mov	r24, r19
 798:	86 78       	andi	r24, 0x86	; 134
 79a:	09 f0       	breq	.+2      	; 0x79e <vfprintf+0x2dc>
 79c:	b3 94       	inc	r11
 79e:	33 fd       	sbrc	r19, 3
 7a0:	13 c0       	rjmp	.+38     	; 0x7c8 <vfprintf+0x306>
 7a2:	30 ff       	sbrs	r19, 0
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <vfprintf+0x2f0>
 7a6:	5a 2c       	mov	r5, r10
 7a8:	b3 14       	cp	r11, r3
 7aa:	18 f4       	brcc	.+6      	; 0x7b2 <vfprintf+0x2f0>
 7ac:	53 0c       	add	r5, r3
 7ae:	5b 18       	sub	r5, r11
 7b0:	b3 2c       	mov	r11, r3
 7b2:	b3 14       	cp	r11, r3
 7b4:	68 f4       	brcc	.+26     	; 0x7d0 <vfprintf+0x30e>
 7b6:	b7 01       	movw	r22, r14
 7b8:	80 e2       	ldi	r24, 0x20	; 32
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	3c 87       	std	Y+12, r19	; 0x0c
 7be:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 7c2:	b3 94       	inc	r11
 7c4:	3c 85       	ldd	r19, Y+12	; 0x0c
 7c6:	f5 cf       	rjmp	.-22     	; 0x7b2 <vfprintf+0x2f0>
 7c8:	b3 14       	cp	r11, r3
 7ca:	10 f4       	brcc	.+4      	; 0x7d0 <vfprintf+0x30e>
 7cc:	3b 18       	sub	r3, r11
 7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <vfprintf+0x310>
 7d0:	31 2c       	mov	r3, r1
 7d2:	34 ff       	sbrs	r19, 4
 7d4:	12 c0       	rjmp	.+36     	; 0x7fa <vfprintf+0x338>
 7d6:	b7 01       	movw	r22, r14
 7d8:	80 e3       	ldi	r24, 0x30	; 48
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	3c 87       	std	Y+12, r19	; 0x0c
 7de:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 7e2:	3c 85       	ldd	r19, Y+12	; 0x0c
 7e4:	32 ff       	sbrs	r19, 2
 7e6:	17 c0       	rjmp	.+46     	; 0x816 <vfprintf+0x354>
 7e8:	31 fd       	sbrc	r19, 1
 7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <vfprintf+0x330>
 7ec:	88 e7       	ldi	r24, 0x78	; 120
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <vfprintf+0x334>
 7f2:	88 e5       	ldi	r24, 0x58	; 88
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	b7 01       	movw	r22, r14
 7f8:	0c c0       	rjmp	.+24     	; 0x812 <vfprintf+0x350>
 7fa:	83 2f       	mov	r24, r19
 7fc:	86 78       	andi	r24, 0x86	; 134
 7fe:	59 f0       	breq	.+22     	; 0x816 <vfprintf+0x354>
 800:	31 ff       	sbrs	r19, 1
 802:	02 c0       	rjmp	.+4      	; 0x808 <vfprintf+0x346>
 804:	8b e2       	ldi	r24, 0x2B	; 43
 806:	01 c0       	rjmp	.+2      	; 0x80a <vfprintf+0x348>
 808:	80 e2       	ldi	r24, 0x20	; 32
 80a:	37 fd       	sbrc	r19, 7
 80c:	8d e2       	ldi	r24, 0x2D	; 45
 80e:	b7 01       	movw	r22, r14
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 816:	a5 14       	cp	r10, r5
 818:	38 f4       	brcc	.+14     	; 0x828 <vfprintf+0x366>
 81a:	b7 01       	movw	r22, r14
 81c:	80 e3       	ldi	r24, 0x30	; 48
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 824:	5a 94       	dec	r5
 826:	f7 cf       	rjmp	.-18     	; 0x816 <vfprintf+0x354>
 828:	aa 94       	dec	r10
 82a:	f4 01       	movw	r30, r8
 82c:	ea 0d       	add	r30, r10
 82e:	f1 1d       	adc	r31, r1
 830:	80 81       	ld	r24, Z
 832:	b7 01       	movw	r22, r14
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 83a:	a1 10       	cpse	r10, r1
 83c:	f5 cf       	rjmp	.-22     	; 0x828 <vfprintf+0x366>
 83e:	33 20       	and	r3, r3
 840:	09 f4       	brne	.+2      	; 0x844 <vfprintf+0x382>
 842:	51 ce       	rjmp	.-862    	; 0x4e6 <vfprintf+0x24>
 844:	b7 01       	movw	r22, r14
 846:	80 e2       	ldi	r24, 0x20	; 32
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0e 94 87 04 	call	0x90e	; 0x90e <fputc>
 84e:	3a 94       	dec	r3
 850:	f6 cf       	rjmp	.-20     	; 0x83e <vfprintf+0x37c>
 852:	f7 01       	movw	r30, r14
 854:	86 81       	ldd	r24, Z+6	; 0x06
 856:	97 81       	ldd	r25, Z+7	; 0x07
 858:	02 c0       	rjmp	.+4      	; 0x85e <vfprintf+0x39c>
 85a:	8f ef       	ldi	r24, 0xFF	; 255
 85c:	9f ef       	ldi	r25, 0xFF	; 255
 85e:	2c 96       	adiw	r28, 0x0c	; 12
 860:	e2 e1       	ldi	r30, 0x12	; 18
 862:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__epilogue_restores__>

00000866 <strnlen_P>:
 866:	fc 01       	movw	r30, r24
 868:	05 90       	lpm	r0, Z+
 86a:	61 50       	subi	r22, 0x01	; 1
 86c:	70 40       	sbci	r23, 0x00	; 0
 86e:	01 10       	cpse	r0, r1
 870:	d8 f7       	brcc	.-10     	; 0x868 <strnlen_P+0x2>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	8e 0f       	add	r24, r30
 878:	9f 1f       	adc	r25, r31
 87a:	08 95       	ret

0000087c <strnlen>:
 87c:	fc 01       	movw	r30, r24
 87e:	61 50       	subi	r22, 0x01	; 1
 880:	70 40       	sbci	r23, 0x00	; 0
 882:	01 90       	ld	r0, Z+
 884:	01 10       	cpse	r0, r1
 886:	d8 f7       	brcc	.-10     	; 0x87e <strnlen+0x2>
 888:	80 95       	com	r24
 88a:	90 95       	com	r25
 88c:	8e 0f       	add	r24, r30
 88e:	9f 1f       	adc	r25, r31
 890:	08 95       	ret

00000892 <fgetc>:
 892:	cf 93       	push	r28
 894:	df 93       	push	r29
 896:	ec 01       	movw	r28, r24
 898:	2b 81       	ldd	r18, Y+3	; 0x03
 89a:	20 ff       	sbrs	r18, 0
 89c:	33 c0       	rjmp	.+102    	; 0x904 <__stack+0x5>
 89e:	26 ff       	sbrs	r18, 6
 8a0:	0a c0       	rjmp	.+20     	; 0x8b6 <fgetc+0x24>
 8a2:	2f 7b       	andi	r18, 0xBF	; 191
 8a4:	2b 83       	std	Y+3, r18	; 0x03
 8a6:	8e 81       	ldd	r24, Y+6	; 0x06
 8a8:	9f 81       	ldd	r25, Y+7	; 0x07
 8aa:	01 96       	adiw	r24, 0x01	; 1
 8ac:	9f 83       	std	Y+7, r25	; 0x07
 8ae:	8e 83       	std	Y+6, r24	; 0x06
 8b0:	8a 81       	ldd	r24, Y+2	; 0x02
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	29 c0       	rjmp	.+82     	; 0x908 <__stack+0x9>
 8b6:	22 ff       	sbrs	r18, 2
 8b8:	0f c0       	rjmp	.+30     	; 0x8d8 <fgetc+0x46>
 8ba:	e8 81       	ld	r30, Y
 8bc:	f9 81       	ldd	r31, Y+1	; 0x01
 8be:	80 81       	ld	r24, Z
 8c0:	08 2e       	mov	r0, r24
 8c2:	00 0c       	add	r0, r0
 8c4:	99 0b       	sbc	r25, r25
 8c6:	00 97       	sbiw	r24, 0x00	; 0
 8c8:	19 f4       	brne	.+6      	; 0x8d0 <fgetc+0x3e>
 8ca:	20 62       	ori	r18, 0x20	; 32
 8cc:	2b 83       	std	Y+3, r18	; 0x03
 8ce:	1a c0       	rjmp	.+52     	; 0x904 <__stack+0x5>
 8d0:	31 96       	adiw	r30, 0x01	; 1
 8d2:	f9 83       	std	Y+1, r31	; 0x01
 8d4:	e8 83       	st	Y, r30
 8d6:	0e c0       	rjmp	.+28     	; 0x8f4 <fgetc+0x62>
 8d8:	ea 85       	ldd	r30, Y+10	; 0x0a
 8da:	fb 85       	ldd	r31, Y+11	; 0x0b
 8dc:	09 95       	icall
 8de:	97 ff       	sbrs	r25, 7
 8e0:	09 c0       	rjmp	.+18     	; 0x8f4 <fgetc+0x62>
 8e2:	2b 81       	ldd	r18, Y+3	; 0x03
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	11 f0       	breq	.+4      	; 0x8ec <fgetc+0x5a>
 8e8:	80 e2       	ldi	r24, 0x20	; 32
 8ea:	01 c0       	rjmp	.+2      	; 0x8ee <fgetc+0x5c>
 8ec:	80 e1       	ldi	r24, 0x10	; 16
 8ee:	82 2b       	or	r24, r18
 8f0:	8b 83       	std	Y+3, r24	; 0x03
 8f2:	08 c0       	rjmp	.+16     	; 0x904 <__stack+0x5>
 8f4:	2e 81       	ldd	r18, Y+6	; 0x06
 8f6:	3f 81       	ldd	r19, Y+7	; 0x07
 8f8:	2f 5f       	subi	r18, 0xFF	; 255
 8fa:	3f 4f       	sbci	r19, 0xFF	; 255
 8fc:	3f 83       	std	Y+7, r19	; 0x07
 8fe:	2e 83       	std	Y+6, r18	; 0x06
 900:	99 27       	eor	r25, r25
 902:	02 c0       	rjmp	.+4      	; 0x908 <__stack+0x9>
 904:	8f ef       	ldi	r24, 0xFF	; 255
 906:	9f ef       	ldi	r25, 0xFF	; 255
 908:	df 91       	pop	r29
 90a:	cf 91       	pop	r28
 90c:	08 95       	ret

0000090e <fputc>:
 90e:	0f 93       	push	r16
 910:	1f 93       	push	r17
 912:	cf 93       	push	r28
 914:	df 93       	push	r29
 916:	fb 01       	movw	r30, r22
 918:	23 81       	ldd	r18, Z+3	; 0x03
 91a:	21 fd       	sbrc	r18, 1
 91c:	03 c0       	rjmp	.+6      	; 0x924 <fputc+0x16>
 91e:	8f ef       	ldi	r24, 0xFF	; 255
 920:	9f ef       	ldi	r25, 0xFF	; 255
 922:	28 c0       	rjmp	.+80     	; 0x974 <fputc+0x66>
 924:	22 ff       	sbrs	r18, 2
 926:	16 c0       	rjmp	.+44     	; 0x954 <fputc+0x46>
 928:	46 81       	ldd	r20, Z+6	; 0x06
 92a:	57 81       	ldd	r21, Z+7	; 0x07
 92c:	24 81       	ldd	r18, Z+4	; 0x04
 92e:	35 81       	ldd	r19, Z+5	; 0x05
 930:	42 17       	cp	r20, r18
 932:	53 07       	cpc	r21, r19
 934:	44 f4       	brge	.+16     	; 0x946 <fputc+0x38>
 936:	a0 81       	ld	r26, Z
 938:	b1 81       	ldd	r27, Z+1	; 0x01
 93a:	9d 01       	movw	r18, r26
 93c:	2f 5f       	subi	r18, 0xFF	; 255
 93e:	3f 4f       	sbci	r19, 0xFF	; 255
 940:	31 83       	std	Z+1, r19	; 0x01
 942:	20 83       	st	Z, r18
 944:	8c 93       	st	X, r24
 946:	26 81       	ldd	r18, Z+6	; 0x06
 948:	37 81       	ldd	r19, Z+7	; 0x07
 94a:	2f 5f       	subi	r18, 0xFF	; 255
 94c:	3f 4f       	sbci	r19, 0xFF	; 255
 94e:	37 83       	std	Z+7, r19	; 0x07
 950:	26 83       	std	Z+6, r18	; 0x06
 952:	10 c0       	rjmp	.+32     	; 0x974 <fputc+0x66>
 954:	eb 01       	movw	r28, r22
 956:	09 2f       	mov	r16, r25
 958:	18 2f       	mov	r17, r24
 95a:	00 84       	ldd	r0, Z+8	; 0x08
 95c:	f1 85       	ldd	r31, Z+9	; 0x09
 95e:	e0 2d       	mov	r30, r0
 960:	09 95       	icall
 962:	89 2b       	or	r24, r25
 964:	e1 f6       	brne	.-72     	; 0x91e <fputc+0x10>
 966:	8e 81       	ldd	r24, Y+6	; 0x06
 968:	9f 81       	ldd	r25, Y+7	; 0x07
 96a:	01 96       	adiw	r24, 0x01	; 1
 96c:	9f 83       	std	Y+7, r25	; 0x07
 96e:	8e 83       	std	Y+6, r24	; 0x06
 970:	81 2f       	mov	r24, r17
 972:	90 2f       	mov	r25, r16
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	1f 91       	pop	r17
 97a:	0f 91       	pop	r16
 97c:	08 95       	ret

0000097e <__ultoa_invert>:
 97e:	fa 01       	movw	r30, r20
 980:	aa 27       	eor	r26, r26
 982:	28 30       	cpi	r18, 0x08	; 8
 984:	51 f1       	breq	.+84     	; 0x9da <__ultoa_invert+0x5c>
 986:	20 31       	cpi	r18, 0x10	; 16
 988:	81 f1       	breq	.+96     	; 0x9ea <__ultoa_invert+0x6c>
 98a:	e8 94       	clt
 98c:	6f 93       	push	r22
 98e:	6e 7f       	andi	r22, 0xFE	; 254
 990:	6e 5f       	subi	r22, 0xFE	; 254
 992:	7f 4f       	sbci	r23, 0xFF	; 255
 994:	8f 4f       	sbci	r24, 0xFF	; 255
 996:	9f 4f       	sbci	r25, 0xFF	; 255
 998:	af 4f       	sbci	r26, 0xFF	; 255
 99a:	b1 e0       	ldi	r27, 0x01	; 1
 99c:	3e d0       	rcall	.+124    	; 0xa1a <__ultoa_invert+0x9c>
 99e:	b4 e0       	ldi	r27, 0x04	; 4
 9a0:	3c d0       	rcall	.+120    	; 0xa1a <__ultoa_invert+0x9c>
 9a2:	67 0f       	add	r22, r23
 9a4:	78 1f       	adc	r23, r24
 9a6:	89 1f       	adc	r24, r25
 9a8:	9a 1f       	adc	r25, r26
 9aa:	a1 1d       	adc	r26, r1
 9ac:	68 0f       	add	r22, r24
 9ae:	79 1f       	adc	r23, r25
 9b0:	8a 1f       	adc	r24, r26
 9b2:	91 1d       	adc	r25, r1
 9b4:	a1 1d       	adc	r26, r1
 9b6:	6a 0f       	add	r22, r26
 9b8:	71 1d       	adc	r23, r1
 9ba:	81 1d       	adc	r24, r1
 9bc:	91 1d       	adc	r25, r1
 9be:	a1 1d       	adc	r26, r1
 9c0:	20 d0       	rcall	.+64     	; 0xa02 <__ultoa_invert+0x84>
 9c2:	09 f4       	brne	.+2      	; 0x9c6 <__ultoa_invert+0x48>
 9c4:	68 94       	set
 9c6:	3f 91       	pop	r19
 9c8:	2a e0       	ldi	r18, 0x0A	; 10
 9ca:	26 9f       	mul	r18, r22
 9cc:	11 24       	eor	r1, r1
 9ce:	30 19       	sub	r19, r0
 9d0:	30 5d       	subi	r19, 0xD0	; 208
 9d2:	31 93       	st	Z+, r19
 9d4:	de f6       	brtc	.-74     	; 0x98c <__ultoa_invert+0xe>
 9d6:	cf 01       	movw	r24, r30
 9d8:	08 95       	ret
 9da:	46 2f       	mov	r20, r22
 9dc:	47 70       	andi	r20, 0x07	; 7
 9de:	40 5d       	subi	r20, 0xD0	; 208
 9e0:	41 93       	st	Z+, r20
 9e2:	b3 e0       	ldi	r27, 0x03	; 3
 9e4:	0f d0       	rcall	.+30     	; 0xa04 <__ultoa_invert+0x86>
 9e6:	c9 f7       	brne	.-14     	; 0x9da <__ultoa_invert+0x5c>
 9e8:	f6 cf       	rjmp	.-20     	; 0x9d6 <__ultoa_invert+0x58>
 9ea:	46 2f       	mov	r20, r22
 9ec:	4f 70       	andi	r20, 0x0F	; 15
 9ee:	40 5d       	subi	r20, 0xD0	; 208
 9f0:	4a 33       	cpi	r20, 0x3A	; 58
 9f2:	18 f0       	brcs	.+6      	; 0x9fa <__ultoa_invert+0x7c>
 9f4:	49 5d       	subi	r20, 0xD9	; 217
 9f6:	31 fd       	sbrc	r19, 1
 9f8:	40 52       	subi	r20, 0x20	; 32
 9fa:	41 93       	st	Z+, r20
 9fc:	02 d0       	rcall	.+4      	; 0xa02 <__ultoa_invert+0x84>
 9fe:	a9 f7       	brne	.-22     	; 0x9ea <__ultoa_invert+0x6c>
 a00:	ea cf       	rjmp	.-44     	; 0x9d6 <__ultoa_invert+0x58>
 a02:	b4 e0       	ldi	r27, 0x04	; 4
 a04:	a6 95       	lsr	r26
 a06:	97 95       	ror	r25
 a08:	87 95       	ror	r24
 a0a:	77 95       	ror	r23
 a0c:	67 95       	ror	r22
 a0e:	ba 95       	dec	r27
 a10:	c9 f7       	brne	.-14     	; 0xa04 <__ultoa_invert+0x86>
 a12:	00 97       	sbiw	r24, 0x00	; 0
 a14:	61 05       	cpc	r22, r1
 a16:	71 05       	cpc	r23, r1
 a18:	08 95       	ret
 a1a:	9b 01       	movw	r18, r22
 a1c:	ac 01       	movw	r20, r24
 a1e:	0a 2e       	mov	r0, r26
 a20:	06 94       	lsr	r0
 a22:	57 95       	ror	r21
 a24:	47 95       	ror	r20
 a26:	37 95       	ror	r19
 a28:	27 95       	ror	r18
 a2a:	ba 95       	dec	r27
 a2c:	c9 f7       	brne	.-14     	; 0xa20 <__ultoa_invert+0xa2>
 a2e:	62 0f       	add	r22, r18
 a30:	73 1f       	adc	r23, r19
 a32:	84 1f       	adc	r24, r20
 a34:	95 1f       	adc	r25, r21
 a36:	a0 1d       	adc	r26, r0
 a38:	08 95       	ret

00000a3a <__prologue_saves__>:
 a3a:	2f 92       	push	r2
 a3c:	3f 92       	push	r3
 a3e:	4f 92       	push	r4
 a40:	5f 92       	push	r5
 a42:	6f 92       	push	r6
 a44:	7f 92       	push	r7
 a46:	8f 92       	push	r8
 a48:	9f 92       	push	r9
 a4a:	af 92       	push	r10
 a4c:	bf 92       	push	r11
 a4e:	cf 92       	push	r12
 a50:	df 92       	push	r13
 a52:	ef 92       	push	r14
 a54:	ff 92       	push	r15
 a56:	0f 93       	push	r16
 a58:	1f 93       	push	r17
 a5a:	cf 93       	push	r28
 a5c:	df 93       	push	r29
 a5e:	cd b7       	in	r28, 0x3d	; 61
 a60:	de b7       	in	r29, 0x3e	; 62
 a62:	ca 1b       	sub	r28, r26
 a64:	db 0b       	sbc	r29, r27
 a66:	0f b6       	in	r0, 0x3f	; 63
 a68:	f8 94       	cli
 a6a:	de bf       	out	0x3e, r29	; 62
 a6c:	0f be       	out	0x3f, r0	; 63
 a6e:	cd bf       	out	0x3d, r28	; 61
 a70:	09 94       	ijmp

00000a72 <__epilogue_restores__>:
 a72:	2a 88       	ldd	r2, Y+18	; 0x12
 a74:	39 88       	ldd	r3, Y+17	; 0x11
 a76:	48 88       	ldd	r4, Y+16	; 0x10
 a78:	5f 84       	ldd	r5, Y+15	; 0x0f
 a7a:	6e 84       	ldd	r6, Y+14	; 0x0e
 a7c:	7d 84       	ldd	r7, Y+13	; 0x0d
 a7e:	8c 84       	ldd	r8, Y+12	; 0x0c
 a80:	9b 84       	ldd	r9, Y+11	; 0x0b
 a82:	aa 84       	ldd	r10, Y+10	; 0x0a
 a84:	b9 84       	ldd	r11, Y+9	; 0x09
 a86:	c8 84       	ldd	r12, Y+8	; 0x08
 a88:	df 80       	ldd	r13, Y+7	; 0x07
 a8a:	ee 80       	ldd	r14, Y+6	; 0x06
 a8c:	fd 80       	ldd	r15, Y+5	; 0x05
 a8e:	0c 81       	ldd	r16, Y+4	; 0x04
 a90:	1b 81       	ldd	r17, Y+3	; 0x03
 a92:	aa 81       	ldd	r26, Y+2	; 0x02
 a94:	b9 81       	ldd	r27, Y+1	; 0x01
 a96:	ce 0f       	add	r28, r30
 a98:	d1 1d       	adc	r29, r1
 a9a:	0f b6       	in	r0, 0x3f	; 63
 a9c:	f8 94       	cli
 a9e:	de bf       	out	0x3e, r29	; 62
 aa0:	0f be       	out	0x3f, r0	; 63
 aa2:	cd bf       	out	0x3d, r28	; 61
 aa4:	ed 01       	movw	r28, r26
 aa6:	08 95       	ret

00000aa8 <_exit>:
 aa8:	f8 94       	cli

00000aaa <__stop_program>:
 aaa:	ff cf       	rjmp	.-2      	; 0xaaa <__stop_program>
