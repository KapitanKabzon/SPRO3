
LCD_USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  0000095c  000009f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000095c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  0080013e  0080013e  00000a2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000990  00000000  00000000  00000b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000467  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003aa  00000000  00000000  00001983  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00001d30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002da  00000000  00000000  00001eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000380  00000000  00000000  00002192  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002512  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 14 01 	jmp	0x228	; 0x228 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 33       	cpi	r26, 0x3E	; 62
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e3       	ldi	r26, 0x3E	; 62
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c3 00 	call	0x186	; 0x186 <main>
  9e:	0c 94 ac 04 	jmp	0x958	; 0x958 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_load_byte>:
 *
 * Parameters: out_byte   The byte to load into the shift register
*/
void lcd_load_byte(uint8_t out_byte)
{
	LCD_PORT &= ~_BV(LCD_CLOCK_PIN);		// CLK = 0
  a6:	2c 98       	cbi	0x05, 4	; 5
  a8:	98 e0       	ldi	r25, 0x08	; 8
	for(unsigned char i=0; i<8; i++)		// 8 shift reg. bits
	{
		if (out_byte & 0x80)				// bit high
  aa:	88 23       	and	r24, r24
  ac:	14 f4       	brge	.+4      	; 0xb2 <lcd_load_byte+0xc>
			LCD_PORT |=_BV(LCD_RSDS_PIN);
  ae:	2d 9a       	sbi	0x05, 5	; 5
  b0:	01 c0       	rjmp	.+2      	; 0xb4 <lcd_load_byte+0xe>
		else
			LCD_PORT &= ~_BV(LCD_RSDS_PIN);	// bit low
  b2:	2d 98       	cbi	0x05, 5	; 5
		out_byte = out_byte << 1;
  b4:	88 0f       	add	r24, r24
		LCD_PORT |= _BV(LCD_CLOCK_PIN);		// strobe CLK
  b6:	2c 9a       	sbi	0x05, 4	; 5
		LCD_PORT &= ~_BV(LCD_CLOCK_PIN);
  b8:	2c 98       	cbi	0x05, 4	; 5
  ba:	91 50       	subi	r25, 0x01	; 1
 * Parameters: out_byte   The byte to load into the shift register
*/
void lcd_load_byte(uint8_t out_byte)
{
	LCD_PORT &= ~_BV(LCD_CLOCK_PIN);		// CLK = 0
	for(unsigned char i=0; i<8; i++)		// 8 shift reg. bits
  bc:	b1 f7       	brne	.-20     	; 0xaa <lcd_load_byte+0x4>
			LCD_PORT &= ~_BV(LCD_RSDS_PIN);	// bit low
		out_byte = out_byte << 1;
		LCD_PORT |= _BV(LCD_CLOCK_PIN);		// strobe CLK
		LCD_PORT &= ~_BV(LCD_CLOCK_PIN);
	}
}
  be:	08 95       	ret

000000c0 <strobe_E>:

/* Strobes the E signal on the LCD to read the byte from the 74HC164. */
void strobe_E(void)
{
	LCD_PORT |= _BV(LCD_ENABLE_PIN);		// E = 1
  c0:	28 9a       	sbi	0x05, 0	; 5
	LCD_PORT |= _BV(LCD_ENABLE_PIN);		// E = 1 twice to extend pulse
  c2:	28 9a       	sbi	0x05, 0	; 5
	LCD_PORT &= ~_BV(LCD_ENABLE_PIN);		// E = 0
  c4:	28 98       	cbi	0x05, 0	; 5
  c6:	08 95       	ret

000000c8 <displayControl>:
}

void displayControl(uint8_t cmd_byte)
{
	lcd_load_byte(cmd_byte);
  c8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_load_byte>
	LCD_PORT &= ~_BV(LCD_RSDS_PIN);  // RS = 0
  cc:	2d 98       	cbi	0x05, 5	; 5
	strobe_E();
  ce:	0e 94 60 00 	call	0xc0	; 0xc0 <strobe_E>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d2:	85 ed       	ldi	r24, 0xD5	; 213
  d4:	8a 95       	dec	r24
  d6:	f1 f7       	brne	.-4      	; 0xd4 <displayControl+0xc>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <lcd_putc>:
 * Loads the byte into the shift register and then sends it to the LCD as a char
 * Parameters:   c               The byte (character) to display
*/
void lcd_putc( char c)
{
	lcd_load_byte(c);
  dc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_load_byte>
	LCD_PORT |= _BV(LCD_RSDS_PIN);		// RS = 1
  e0:	2d 9a       	sbi	0x05, 5	; 5
	strobe_E();
  e2:	0e 94 60 00 	call	0xc0	; 0xc0 <strobe_E>
  e6:	8a ee       	ldi	r24, 0xEA	; 234
  e8:	8a 95       	dec	r24
  ea:	f1 f7       	brne	.-4      	; 0xe8 <lcd_putc+0xc>
  ec:	00 c0       	rjmp	.+0      	; 0xee <lcd_putc+0x12>
  ee:	08 95       	ret

000000f0 <putchr>:
/* putchr provides an interface to avr gcc stdio stdout to be used
   for formatted output with printf
*/
int putchr(char c, FILE *stream)
{
	lcd_putc(c);
  f0:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_putc>
 	return 0;
}
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	08 95       	ret

000000fa <lcd_home>:

/* Moves the cursor to the home position. */
void lcd_home()
{
	displayControl(0x02);
  fa:	82 e0       	ldi	r24, 0x02	; 2
  fc:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	8f e3       	ldi	r24, 0x3F	; 63
 102:	9f e1       	ldi	r25, 0x1F	; 31
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_home+0xa>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_home+0x10>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <lcd_init>:
	_delay_us(40);					// default "after command" delay
}

void lcd_init()
{
  DDRB = 0x31;
 10e:	81 e3       	ldi	r24, 0x31	; 49
 110:	84 b9       	out	0x04, r24	; 4
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	86 e7       	ldi	r24, 0x76	; 118
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <lcd_init+0xa>
 120:	00 c0       	rjmp	.+0      	; 0x122 <lcd_init+0x14>
 122:	00 00       	nop
	_delay_ms(30);			// 30ms power on delay for the DEM20231 LCD
	displayControl(0x38);	// display off
 124:	88 e3       	ldi	r24, 0x38	; 56
 126:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	displayControl(0x08);	// display off
 12a:	88 e0       	ldi	r24, 0x08	; 8
 12c:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	displayControl(0x01);	// Clear display
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 136:	8f e3       	ldi	r24, 0x3F	; 63
 138:	9f e1       	ldi	r25, 0x1F	; 31
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_init+0x2c>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <lcd_init+0x32>
 140:	00 00       	nop
	_delay_ms(2);			// 2ms clear LCD delay for the DEM20231 LCD
	displayControl(0x06);	// entry mode set
 142:	86 e0       	ldi	r24, 0x06	; 6
 144:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
	lcd_home();				// cursor home
 148:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_home>
	displayControl(0x0C);	// display ON
 14c:	8c e0       	ldi	r24, 0x0C	; 12
 14e:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 152:	08 95       	ret

00000154 <lcd_gotoxy>:

void lcd_gotoxy(uint8_t row, uint8_t position)
{
	unsigned char controlByte;
	controlByte = 0x80 + position - 1;
	switch (row)
 154:	81 30       	cpi	r24, 0x01	; 1
 156:	19 f0       	breq	.+6      	; 0x15e <lcd_gotoxy+0xa>
 158:	82 30       	cpi	r24, 0x02	; 2
 15a:	31 f0       	breq	.+12     	; 0x168 <lcd_gotoxy+0x14>
 15c:	08 95       	ret
	{
	 case 1 : displayControl(controlByte); break;
 15e:	8f e7       	ldi	r24, 0x7F	; 127
 160:	86 0f       	add	r24, r22
 162:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 166:	08 95       	ret
	 case 2 : displayControl(0x40+controlByte); break;
 168:	8f eb       	ldi	r24, 0xBF	; 191
 16a:	86 0f       	add	r24, r22
 16c:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 170:	08 95       	ret

00000172 <lcd_clear>:
// Input:  void
// Output: void

void lcd_clear(void)
{
	displayControl(0x01);
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	0e 94 64 00 	call	0xc8	; 0xc8 <displayControl>
 178:	8f e3       	ldi	r24, 0x3F	; 63
 17a:	9f e1       	ldi	r25, 0x1F	; 31
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <lcd_clear+0xa>
 180:	00 c0       	rjmp	.+0      	; 0x182 <lcd_clear+0x10>
 182:	00 00       	nop
 184:	08 95       	ret

00000186 <main>:
volatile int data[10];
volatile char check;

int main(void)
{
    uart_init();
 186:	0e 94 7f 01 	call	0x2fe	; 0x2fe <uart_init>
	io_redirect();
 18a:	0e 94 90 01 	call	0x320	; 0x320 <io_redirect>
	lcd_init();
 18e:	0e 94 87 00 	call	0x10e	; 0x10e <lcd_init>
	sei();
 192:	78 94       	sei
	
	UCSR0B |= _BV(RXCIE0);
 194:	e1 ec       	ldi	r30, 0xC1	; 193
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 68       	ori	r24, 0x80	; 128
 19c:	80 83       	st	Z, r24
	
	printf("Hello world!");
 19e:	8a e2       	ldi	r24, 0x2A	; 42
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <printf>
	fprintf(&lcd_output, "Sup");
 1aa:	20 e0       	ldi	r18, 0x00	; 0
 1ac:	31 e0       	ldi	r19, 0x01	; 1
 1ae:	43 e0       	ldi	r20, 0x03	; 3
 1b0:	50 e0       	ldi	r21, 0x00	; 0
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	87 e3       	ldi	r24, 0x37	; 55
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	0e 94 ad 01 	call	0x35a	; 0x35a <fwrite>
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
	while (1){
		if (check){
			printf("%d", *data);
 1c2:	0f 2e       	mov	r0, r31
 1c4:	f1 e4       	ldi	r31, 0x41	; 65
 1c6:	ef 2e       	mov	r14, r31
 1c8:	f1 e0       	ldi	r31, 0x01	; 1
 1ca:	ff 2e       	mov	r15, r31
 1cc:	f0 2d       	mov	r31, r0
 1ce:	cb e3       	ldi	r28, 0x3B	; 59
 1d0:	d1 e0       	ldi	r29, 0x01	; 1
			lcd_clear();
			lcd_gotoxy(1,1);
			fprintf(&lcd_output, "%d", *data);
 1d2:	00 e0       	ldi	r16, 0x00	; 0
 1d4:	11 e0       	ldi	r17, 0x01	; 1
	UCSR0B |= _BV(RXCIE0);
	
	printf("Hello world!");
	fprintf(&lcd_output, "Sup");
	while (1){
		if (check){
 1d6:	80 91 40 01 	lds	r24, 0x0140
 1da:	88 23       	and	r24, r24
 1dc:	e1 f3       	breq	.-8      	; 0x1d6 <main+0x50>
			printf("%d", *data);
 1de:	f7 01       	movw	r30, r14
 1e0:	80 81       	ld	r24, Z
 1e2:	91 81       	ldd	r25, Z+1	; 0x01
 1e4:	9f 93       	push	r25
 1e6:	8f 93       	push	r24
 1e8:	df 93       	push	r29
 1ea:	cf 93       	push	r28
 1ec:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <printf>
			lcd_clear();
 1f0:	0e 94 b9 00 	call	0x172	; 0x172 <lcd_clear>
			lcd_gotoxy(1,1);
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_gotoxy>
			fprintf(&lcd_output, "%d", *data);
 1fc:	f7 01       	movw	r30, r14
 1fe:	80 81       	ld	r24, Z
 200:	91 81       	ldd	r25, Z+1	; 0x01
 202:	9f 93       	push	r25
 204:	8f 93       	push	r24
 206:	df 93       	push	r29
 208:	cf 93       	push	r28
 20a:	1f 93       	push	r17
 20c:	0f 93       	push	r16
 20e:	0e 94 9b 01 	call	0x336	; 0x336 <fprintf>
			check = 0;
 212:	10 92 40 01 	sts	0x0140, r1
 216:	ed b7       	in	r30, 0x3d	; 61
 218:	fe b7       	in	r31, 0x3e	; 62
 21a:	3a 96       	adiw	r30, 0x0a	; 10
 21c:	0f b6       	in	r0, 0x3f	; 63
 21e:	f8 94       	cli
 220:	fe bf       	out	0x3e, r31	; 62
 222:	0f be       	out	0x3f, r0	; 63
 224:	ed bf       	out	0x3d, r30	; 61
 226:	d7 cf       	rjmp	.-82     	; 0x1d6 <main+0x50>

00000228 <__vector_18>:
		}
	}
}

ISR (USART_RX_vect)
{
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	2f 93       	push	r18
 234:	3f 93       	push	r19
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
	data[i] = UDR0;
 23e:	e0 91 3e 01 	lds	r30, 0x013E
 242:	f0 91 3f 01 	lds	r31, 0x013F
 246:	80 91 c6 00 	lds	r24, 0x00C6
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ee 0f       	add	r30, r30
 24e:	ff 1f       	adc	r31, r31
 250:	ef 5b       	subi	r30, 0xBF	; 191
 252:	fe 4f       	sbci	r31, 0xFE	; 254
 254:	91 83       	std	Z+1, r25	; 0x01
 256:	80 83       	st	Z, r24
	if (data[i++] == '\r'){
 258:	80 91 3e 01 	lds	r24, 0x013E
 25c:	90 91 3f 01 	lds	r25, 0x013F
 260:	9c 01       	movw	r18, r24
 262:	2f 5f       	subi	r18, 0xFF	; 255
 264:	3f 4f       	sbci	r19, 0xFF	; 255
 266:	30 93 3f 01 	sts	0x013F, r19
 26a:	20 93 3e 01 	sts	0x013E, r18
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	fc 01       	movw	r30, r24
 274:	ef 5b       	subi	r30, 0xBF	; 191
 276:	fe 4f       	sbci	r31, 0xFE	; 254
 278:	80 81       	ld	r24, Z
 27a:	91 81       	ldd	r25, Z+1	; 0x01
 27c:	0d 97       	sbiw	r24, 0x0d	; 13
 27e:	c9 f4       	brne	.+50     	; 0x2b2 <__vector_18+0x8a>
		check = 1;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	80 93 40 01 	sts	0x0140, r24
		data[i--] = 0x00;
 286:	80 91 3e 01 	lds	r24, 0x013E
 28a:	90 91 3f 01 	lds	r25, 0x013F
 28e:	9c 01       	movw	r18, r24
 290:	21 50       	subi	r18, 0x01	; 1
 292:	31 09       	sbc	r19, r1
 294:	30 93 3f 01 	sts	0x013F, r19
 298:	20 93 3e 01 	sts	0x013E, r18
 29c:	88 0f       	add	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	fc 01       	movw	r30, r24
 2a2:	ef 5b       	subi	r30, 0xBF	; 191
 2a4:	fe 4f       	sbci	r31, 0xFE	; 254
 2a6:	11 82       	std	Z+1, r1	; 0x01
 2a8:	10 82       	st	Z, r1
		i = 0;
 2aa:	10 92 3f 01 	sts	0x013F, r1
 2ae:	10 92 3e 01 	sts	0x013E, r1
	}
	check = 1;
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	80 93 40 01 	sts	0x0140, r24
}
 2b8:	ff 91       	pop	r31
 2ba:	ef 91       	pop	r30
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	3f 91       	pop	r19
 2c2:	2f 91       	pop	r18
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
 2ce:	cf 93       	push	r28
 2d0:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 2d2:	8a 30       	cpi	r24, 0x0A	; 10
 2d4:	19 f4       	brne	.+6      	; 0x2dc <uart_putchar+0xe>
		uart_putchar('\r', stream);
 2d6:	8d e0       	ldi	r24, 0x0D	; 13
 2d8:	0e 94 67 01 	call	0x2ce	; 0x2ce <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 2dc:	e0 ec       	ldi	r30, 0xC0	; 192
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	90 81       	ld	r25, Z
 2e2:	95 ff       	sbrs	r25, 5
 2e4:	fd cf       	rjmp	.-6      	; 0x2e0 <uart_putchar+0x12>
	UDR0 = c;
 2e6:	c0 93 c6 00 	sts	0x00C6, r28
}
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 2ee:	e0 ec       	ldi	r30, 0xC0	; 192
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	88 23       	and	r24, r24
 2f6:	ec f7       	brge	.-6      	; 0x2f2 <uart_getchar+0x4>
	return UDR0;
 2f8:	80 91 c6 00 	lds	r24, 0x00C6
 2fc:	08 95       	ret

000002fe <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
 2fe:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;
 302:	87 e6       	ldi	r24, 0x67	; 103
 304:	80 93 c4 00 	sts	0x00C4, r24
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
 308:	e0 ec       	ldi	r30, 0xC0	; 192
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	8d 7f       	andi	r24, 0xFD	; 253
 310:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
 312:	86 e0       	ldi	r24, 0x06	; 6
 314:	80 93 c2 00 	sts	0x00C2, r24
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 318:	88 e1       	ldi	r24, 0x18	; 24
 31a:	80 93 c1 00 	sts	0x00C1, r24
 31e:	08 95       	ret

00000320 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
 320:	e5 e5       	ldi	r30, 0x55	; 85
 322:	f1 e0       	ldi	r31, 0x01	; 1
 324:	8c e1       	ldi	r24, 0x1C	; 28
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	93 83       	std	Z+3, r25	; 0x03
 32a:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
 32c:	8e e0       	ldi	r24, 0x0E	; 14
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	91 83       	std	Z+1, r25	; 0x01
 332:	80 83       	st	Z, r24
 334:	08 95       	ret

00000336 <fprintf>:
 336:	a0 e0       	ldi	r26, 0x00	; 0
 338:	b0 e0       	ldi	r27, 0x00	; 0
 33a:	e1 ea       	ldi	r30, 0xA1	; 161
 33c:	f1 e0       	ldi	r31, 0x01	; 1
 33e:	0c 94 85 04 	jmp	0x90a	; 0x90a <__stack+0xb>
 342:	ae 01       	movw	r20, r28
 344:	47 5f       	subi	r20, 0xF7	; 247
 346:	5f 4f       	sbci	r21, 0xFF	; 255
 348:	6f 81       	ldd	r22, Y+7	; 0x07
 34a:	78 85       	ldd	r23, Y+8	; 0x08
 34c:	8d 81       	ldd	r24, Y+5	; 0x05
 34e:	9e 81       	ldd	r25, Y+6	; 0x06
 350:	0e 94 f7 01 	call	0x3ee	; 0x3ee <vfprintf>
 354:	e2 e0       	ldi	r30, 0x02	; 2
 356:	0c 94 a1 04 	jmp	0x942	; 0x942 <__epilogue_restores__+0x20>

0000035a <fwrite>:
 35a:	a0 e0       	ldi	r26, 0x00	; 0
 35c:	b0 e0       	ldi	r27, 0x00	; 0
 35e:	e3 eb       	ldi	r30, 0xB3	; 179
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__prologue_saves__+0xc>
 366:	5b 01       	movw	r10, r22
 368:	4a 01       	movw	r8, r20
 36a:	79 01       	movw	r14, r18
 36c:	d9 01       	movw	r26, r18
 36e:	13 96       	adiw	r26, 0x03	; 3
 370:	2c 91       	ld	r18, X
 372:	21 ff       	sbrs	r18, 1
 374:	1d c0       	rjmp	.+58     	; 0x3b0 <fwrite+0x56>
 376:	c0 e0       	ldi	r28, 0x00	; 0
 378:	d0 e0       	ldi	r29, 0x00	; 0
 37a:	c8 15       	cp	r28, r8
 37c:	d9 05       	cpc	r29, r9
 37e:	d9 f0       	breq	.+54     	; 0x3b6 <fwrite+0x5c>
 380:	8c 01       	movw	r16, r24
 382:	6c 01       	movw	r12, r24
 384:	ca 0c       	add	r12, r10
 386:	db 1c       	adc	r13, r11
 388:	c8 01       	movw	r24, r16
 38a:	0c 15       	cp	r16, r12
 38c:	1d 05       	cpc	r17, r13
 38e:	71 f0       	breq	.+28     	; 0x3ac <fwrite+0x52>
 390:	0f 5f       	subi	r16, 0xFF	; 255
 392:	1f 4f       	sbci	r17, 0xFF	; 255
 394:	d7 01       	movw	r26, r14
 396:	18 96       	adiw	r26, 0x08	; 8
 398:	ed 91       	ld	r30, X+
 39a:	fc 91       	ld	r31, X
 39c:	19 97       	sbiw	r26, 0x09	; 9
 39e:	b7 01       	movw	r22, r14
 3a0:	dc 01       	movw	r26, r24
 3a2:	8c 91       	ld	r24, X
 3a4:	09 95       	icall
 3a6:	89 2b       	or	r24, r25
 3a8:	79 f3       	breq	.-34     	; 0x388 <fwrite+0x2e>
 3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <fwrite+0x5c>
 3ac:	21 96       	adiw	r28, 0x01	; 1
 3ae:	e5 cf       	rjmp	.-54     	; 0x37a <fwrite+0x20>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <fwrite+0x5e>
 3b6:	ce 01       	movw	r24, r28
 3b8:	cd b7       	in	r28, 0x3d	; 61
 3ba:	de b7       	in	r29, 0x3e	; 62
 3bc:	ec e0       	ldi	r30, 0x0C	; 12
 3be:	0c 94 97 04 	jmp	0x92e	; 0x92e <__epilogue_restores__+0xc>

000003c2 <printf>:
 3c2:	a0 e0       	ldi	r26, 0x00	; 0
 3c4:	b0 e0       	ldi	r27, 0x00	; 0
 3c6:	e7 ee       	ldi	r30, 0xE7	; 231
 3c8:	f1 e0       	ldi	r31, 0x01	; 1
 3ca:	0c 94 85 04 	jmp	0x90a	; 0x90a <__stack+0xb>
 3ce:	ae 01       	movw	r20, r28
 3d0:	4b 5f       	subi	r20, 0xFB	; 251
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	fa 01       	movw	r30, r20
 3d6:	61 91       	ld	r22, Z+
 3d8:	71 91       	ld	r23, Z+
 3da:	af 01       	movw	r20, r30
 3dc:	80 91 57 01 	lds	r24, 0x0157
 3e0:	90 91 58 01 	lds	r25, 0x0158
 3e4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <vfprintf>
 3e8:	e2 e0       	ldi	r30, 0x02	; 2
 3ea:	0c 94 a1 04 	jmp	0x942	; 0x942 <__epilogue_restores__+0x20>

000003ee <vfprintf>:
 3ee:	ac e0       	ldi	r26, 0x0C	; 12
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	ed ef       	ldi	r30, 0xFD	; 253
 3f4:	f1 e0       	ldi	r31, 0x01	; 1
 3f6:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__prologue_saves__>
 3fa:	7c 01       	movw	r14, r24
 3fc:	6b 01       	movw	r12, r22
 3fe:	8a 01       	movw	r16, r20
 400:	fc 01       	movw	r30, r24
 402:	17 82       	std	Z+7, r1	; 0x07
 404:	16 82       	std	Z+6, r1	; 0x06
 406:	83 81       	ldd	r24, Z+3	; 0x03
 408:	81 ff       	sbrs	r24, 1
 40a:	bd c1       	rjmp	.+890    	; 0x786 <vfprintf+0x398>
 40c:	ce 01       	movw	r24, r28
 40e:	01 96       	adiw	r24, 0x01	; 1
 410:	4c 01       	movw	r8, r24
 412:	f7 01       	movw	r30, r14
 414:	93 81       	ldd	r25, Z+3	; 0x03
 416:	f6 01       	movw	r30, r12
 418:	93 fd       	sbrc	r25, 3
 41a:	85 91       	lpm	r24, Z+
 41c:	93 ff       	sbrs	r25, 3
 41e:	81 91       	ld	r24, Z+
 420:	6f 01       	movw	r12, r30
 422:	88 23       	and	r24, r24
 424:	09 f4       	brne	.+2      	; 0x428 <vfprintf+0x3a>
 426:	ab c1       	rjmp	.+854    	; 0x77e <vfprintf+0x390>
 428:	85 32       	cpi	r24, 0x25	; 37
 42a:	39 f4       	brne	.+14     	; 0x43a <vfprintf+0x4c>
 42c:	93 fd       	sbrc	r25, 3
 42e:	85 91       	lpm	r24, Z+
 430:	93 ff       	sbrs	r25, 3
 432:	81 91       	ld	r24, Z+
 434:	6f 01       	movw	r12, r30
 436:	85 32       	cpi	r24, 0x25	; 37
 438:	29 f4       	brne	.+10     	; 0x444 <vfprintf+0x56>
 43a:	b7 01       	movw	r22, r14
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 442:	e7 cf       	rjmp	.-50     	; 0x412 <vfprintf+0x24>
 444:	51 2c       	mov	r5, r1
 446:	31 2c       	mov	r3, r1
 448:	20 e0       	ldi	r18, 0x00	; 0
 44a:	20 32       	cpi	r18, 0x20	; 32
 44c:	a0 f4       	brcc	.+40     	; 0x476 <vfprintf+0x88>
 44e:	8b 32       	cpi	r24, 0x2B	; 43
 450:	69 f0       	breq	.+26     	; 0x46c <vfprintf+0x7e>
 452:	30 f4       	brcc	.+12     	; 0x460 <vfprintf+0x72>
 454:	80 32       	cpi	r24, 0x20	; 32
 456:	59 f0       	breq	.+22     	; 0x46e <vfprintf+0x80>
 458:	83 32       	cpi	r24, 0x23	; 35
 45a:	69 f4       	brne	.+26     	; 0x476 <vfprintf+0x88>
 45c:	20 61       	ori	r18, 0x10	; 16
 45e:	2c c0       	rjmp	.+88     	; 0x4b8 <vfprintf+0xca>
 460:	8d 32       	cpi	r24, 0x2D	; 45
 462:	39 f0       	breq	.+14     	; 0x472 <vfprintf+0x84>
 464:	80 33       	cpi	r24, 0x30	; 48
 466:	39 f4       	brne	.+14     	; 0x476 <vfprintf+0x88>
 468:	21 60       	ori	r18, 0x01	; 1
 46a:	26 c0       	rjmp	.+76     	; 0x4b8 <vfprintf+0xca>
 46c:	22 60       	ori	r18, 0x02	; 2
 46e:	24 60       	ori	r18, 0x04	; 4
 470:	23 c0       	rjmp	.+70     	; 0x4b8 <vfprintf+0xca>
 472:	28 60       	ori	r18, 0x08	; 8
 474:	21 c0       	rjmp	.+66     	; 0x4b8 <vfprintf+0xca>
 476:	27 fd       	sbrc	r18, 7
 478:	27 c0       	rjmp	.+78     	; 0x4c8 <vfprintf+0xda>
 47a:	30 ed       	ldi	r19, 0xD0	; 208
 47c:	38 0f       	add	r19, r24
 47e:	3a 30       	cpi	r19, 0x0A	; 10
 480:	78 f4       	brcc	.+30     	; 0x4a0 <vfprintf+0xb2>
 482:	26 ff       	sbrs	r18, 6
 484:	06 c0       	rjmp	.+12     	; 0x492 <vfprintf+0xa4>
 486:	fa e0       	ldi	r31, 0x0A	; 10
 488:	5f 9e       	mul	r5, r31
 48a:	30 0d       	add	r19, r0
 48c:	11 24       	eor	r1, r1
 48e:	53 2e       	mov	r5, r19
 490:	13 c0       	rjmp	.+38     	; 0x4b8 <vfprintf+0xca>
 492:	8a e0       	ldi	r24, 0x0A	; 10
 494:	38 9e       	mul	r3, r24
 496:	30 0d       	add	r19, r0
 498:	11 24       	eor	r1, r1
 49a:	33 2e       	mov	r3, r19
 49c:	20 62       	ori	r18, 0x20	; 32
 49e:	0c c0       	rjmp	.+24     	; 0x4b8 <vfprintf+0xca>
 4a0:	8e 32       	cpi	r24, 0x2E	; 46
 4a2:	21 f4       	brne	.+8      	; 0x4ac <vfprintf+0xbe>
 4a4:	26 fd       	sbrc	r18, 6
 4a6:	6b c1       	rjmp	.+726    	; 0x77e <vfprintf+0x390>
 4a8:	20 64       	ori	r18, 0x40	; 64
 4aa:	06 c0       	rjmp	.+12     	; 0x4b8 <vfprintf+0xca>
 4ac:	8c 36       	cpi	r24, 0x6C	; 108
 4ae:	11 f4       	brne	.+4      	; 0x4b4 <vfprintf+0xc6>
 4b0:	20 68       	ori	r18, 0x80	; 128
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <vfprintf+0xca>
 4b4:	88 36       	cpi	r24, 0x68	; 104
 4b6:	41 f4       	brne	.+16     	; 0x4c8 <vfprintf+0xda>
 4b8:	f6 01       	movw	r30, r12
 4ba:	93 fd       	sbrc	r25, 3
 4bc:	85 91       	lpm	r24, Z+
 4be:	93 ff       	sbrs	r25, 3
 4c0:	81 91       	ld	r24, Z+
 4c2:	6f 01       	movw	r12, r30
 4c4:	81 11       	cpse	r24, r1
 4c6:	c1 cf       	rjmp	.-126    	; 0x44a <vfprintf+0x5c>
 4c8:	98 2f       	mov	r25, r24
 4ca:	9f 7d       	andi	r25, 0xDF	; 223
 4cc:	95 54       	subi	r25, 0x45	; 69
 4ce:	93 30       	cpi	r25, 0x03	; 3
 4d0:	28 f4       	brcc	.+10     	; 0x4dc <vfprintf+0xee>
 4d2:	0c 5f       	subi	r16, 0xFC	; 252
 4d4:	1f 4f       	sbci	r17, 0xFF	; 255
 4d6:	ff e3       	ldi	r31, 0x3F	; 63
 4d8:	f9 83       	std	Y+1, r31	; 0x01
 4da:	0d c0       	rjmp	.+26     	; 0x4f6 <vfprintf+0x108>
 4dc:	83 36       	cpi	r24, 0x63	; 99
 4de:	31 f0       	breq	.+12     	; 0x4ec <vfprintf+0xfe>
 4e0:	83 37       	cpi	r24, 0x73	; 115
 4e2:	71 f0       	breq	.+28     	; 0x500 <vfprintf+0x112>
 4e4:	83 35       	cpi	r24, 0x53	; 83
 4e6:	09 f0       	breq	.+2      	; 0x4ea <vfprintf+0xfc>
 4e8:	5b c0       	rjmp	.+182    	; 0x5a0 <vfprintf+0x1b2>
 4ea:	22 c0       	rjmp	.+68     	; 0x530 <vfprintf+0x142>
 4ec:	f8 01       	movw	r30, r16
 4ee:	80 81       	ld	r24, Z
 4f0:	89 83       	std	Y+1, r24	; 0x01
 4f2:	0e 5f       	subi	r16, 0xFE	; 254
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	44 24       	eor	r4, r4
 4f8:	43 94       	inc	r4
 4fa:	51 2c       	mov	r5, r1
 4fc:	54 01       	movw	r10, r8
 4fe:	15 c0       	rjmp	.+42     	; 0x52a <vfprintf+0x13c>
 500:	38 01       	movw	r6, r16
 502:	f2 e0       	ldi	r31, 0x02	; 2
 504:	6f 0e       	add	r6, r31
 506:	71 1c       	adc	r7, r1
 508:	f8 01       	movw	r30, r16
 50a:	a0 80       	ld	r10, Z
 50c:	b1 80       	ldd	r11, Z+1	; 0x01
 50e:	26 ff       	sbrs	r18, 6
 510:	03 c0       	rjmp	.+6      	; 0x518 <vfprintf+0x12a>
 512:	65 2d       	mov	r22, r5
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	02 c0       	rjmp	.+4      	; 0x51c <vfprintf+0x12e>
 518:	6f ef       	ldi	r22, 0xFF	; 255
 51a:	7f ef       	ldi	r23, 0xFF	; 255
 51c:	c5 01       	movw	r24, r10
 51e:	2c 87       	std	Y+12, r18	; 0x0c
 520:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <strnlen>
 524:	2c 01       	movw	r4, r24
 526:	83 01       	movw	r16, r6
 528:	2c 85       	ldd	r18, Y+12	; 0x0c
 52a:	2f 77       	andi	r18, 0x7F	; 127
 52c:	22 2e       	mov	r2, r18
 52e:	17 c0       	rjmp	.+46     	; 0x55e <vfprintf+0x170>
 530:	38 01       	movw	r6, r16
 532:	f2 e0       	ldi	r31, 0x02	; 2
 534:	6f 0e       	add	r6, r31
 536:	71 1c       	adc	r7, r1
 538:	f8 01       	movw	r30, r16
 53a:	a0 80       	ld	r10, Z
 53c:	b1 80       	ldd	r11, Z+1	; 0x01
 53e:	26 ff       	sbrs	r18, 6
 540:	03 c0       	rjmp	.+6      	; 0x548 <vfprintf+0x15a>
 542:	65 2d       	mov	r22, r5
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <vfprintf+0x15e>
 548:	6f ef       	ldi	r22, 0xFF	; 255
 54a:	7f ef       	ldi	r23, 0xFF	; 255
 54c:	c5 01       	movw	r24, r10
 54e:	2c 87       	std	Y+12, r18	; 0x0c
 550:	0e 94 c9 03 	call	0x792	; 0x792 <strnlen_P>
 554:	2c 01       	movw	r4, r24
 556:	2c 85       	ldd	r18, Y+12	; 0x0c
 558:	20 68       	ori	r18, 0x80	; 128
 55a:	22 2e       	mov	r2, r18
 55c:	83 01       	movw	r16, r6
 55e:	23 fc       	sbrc	r2, 3
 560:	1b c0       	rjmp	.+54     	; 0x598 <vfprintf+0x1aa>
 562:	83 2d       	mov	r24, r3
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	48 16       	cp	r4, r24
 568:	59 06       	cpc	r5, r25
 56a:	b0 f4       	brcc	.+44     	; 0x598 <vfprintf+0x1aa>
 56c:	b7 01       	movw	r22, r14
 56e:	80 e2       	ldi	r24, 0x20	; 32
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 576:	3a 94       	dec	r3
 578:	f4 cf       	rjmp	.-24     	; 0x562 <vfprintf+0x174>
 57a:	f5 01       	movw	r30, r10
 57c:	27 fc       	sbrc	r2, 7
 57e:	85 91       	lpm	r24, Z+
 580:	27 fe       	sbrs	r2, 7
 582:	81 91       	ld	r24, Z+
 584:	5f 01       	movw	r10, r30
 586:	b7 01       	movw	r22, r14
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 58e:	31 10       	cpse	r3, r1
 590:	3a 94       	dec	r3
 592:	f1 e0       	ldi	r31, 0x01	; 1
 594:	4f 1a       	sub	r4, r31
 596:	51 08       	sbc	r5, r1
 598:	41 14       	cp	r4, r1
 59a:	51 04       	cpc	r5, r1
 59c:	71 f7       	brne	.-36     	; 0x57a <vfprintf+0x18c>
 59e:	e5 c0       	rjmp	.+458    	; 0x76a <vfprintf+0x37c>
 5a0:	84 36       	cpi	r24, 0x64	; 100
 5a2:	11 f0       	breq	.+4      	; 0x5a8 <vfprintf+0x1ba>
 5a4:	89 36       	cpi	r24, 0x69	; 105
 5a6:	39 f5       	brne	.+78     	; 0x5f6 <vfprintf+0x208>
 5a8:	f8 01       	movw	r30, r16
 5aa:	27 ff       	sbrs	r18, 7
 5ac:	07 c0       	rjmp	.+14     	; 0x5bc <vfprintf+0x1ce>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	82 81       	ldd	r24, Z+2	; 0x02
 5b4:	93 81       	ldd	r25, Z+3	; 0x03
 5b6:	0c 5f       	subi	r16, 0xFC	; 252
 5b8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ba:	08 c0       	rjmp	.+16     	; 0x5cc <vfprintf+0x1de>
 5bc:	60 81       	ld	r22, Z
 5be:	71 81       	ldd	r23, Z+1	; 0x01
 5c0:	07 2e       	mov	r0, r23
 5c2:	00 0c       	add	r0, r0
 5c4:	88 0b       	sbc	r24, r24
 5c6:	99 0b       	sbc	r25, r25
 5c8:	0e 5f       	subi	r16, 0xFE	; 254
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	2f 76       	andi	r18, 0x6F	; 111
 5ce:	72 2e       	mov	r7, r18
 5d0:	97 ff       	sbrs	r25, 7
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <vfprintf+0x1f8>
 5d4:	90 95       	com	r25
 5d6:	80 95       	com	r24
 5d8:	70 95       	com	r23
 5da:	61 95       	neg	r22
 5dc:	7f 4f       	sbci	r23, 0xFF	; 255
 5de:	8f 4f       	sbci	r24, 0xFF	; 255
 5e0:	9f 4f       	sbci	r25, 0xFF	; 255
 5e2:	20 68       	ori	r18, 0x80	; 128
 5e4:	72 2e       	mov	r7, r18
 5e6:	2a e0       	ldi	r18, 0x0A	; 10
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	a4 01       	movw	r20, r8
 5ec:	0e 94 17 04 	call	0x82e	; 0x82e <__ultoa_invert>
 5f0:	a8 2e       	mov	r10, r24
 5f2:	a8 18       	sub	r10, r8
 5f4:	44 c0       	rjmp	.+136    	; 0x67e <vfprintf+0x290>
 5f6:	85 37       	cpi	r24, 0x75	; 117
 5f8:	29 f4       	brne	.+10     	; 0x604 <vfprintf+0x216>
 5fa:	2f 7e       	andi	r18, 0xEF	; 239
 5fc:	b2 2e       	mov	r11, r18
 5fe:	2a e0       	ldi	r18, 0x0A	; 10
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	25 c0       	rjmp	.+74     	; 0x64e <vfprintf+0x260>
 604:	f2 2f       	mov	r31, r18
 606:	f9 7f       	andi	r31, 0xF9	; 249
 608:	bf 2e       	mov	r11, r31
 60a:	8f 36       	cpi	r24, 0x6F	; 111
 60c:	c1 f0       	breq	.+48     	; 0x63e <vfprintf+0x250>
 60e:	18 f4       	brcc	.+6      	; 0x616 <vfprintf+0x228>
 610:	88 35       	cpi	r24, 0x58	; 88
 612:	79 f0       	breq	.+30     	; 0x632 <vfprintf+0x244>
 614:	b4 c0       	rjmp	.+360    	; 0x77e <vfprintf+0x390>
 616:	80 37       	cpi	r24, 0x70	; 112
 618:	19 f0       	breq	.+6      	; 0x620 <vfprintf+0x232>
 61a:	88 37       	cpi	r24, 0x78	; 120
 61c:	21 f0       	breq	.+8      	; 0x626 <vfprintf+0x238>
 61e:	af c0       	rjmp	.+350    	; 0x77e <vfprintf+0x390>
 620:	2f 2f       	mov	r18, r31
 622:	20 61       	ori	r18, 0x10	; 16
 624:	b2 2e       	mov	r11, r18
 626:	b4 fe       	sbrs	r11, 4
 628:	0d c0       	rjmp	.+26     	; 0x644 <vfprintf+0x256>
 62a:	8b 2d       	mov	r24, r11
 62c:	84 60       	ori	r24, 0x04	; 4
 62e:	b8 2e       	mov	r11, r24
 630:	09 c0       	rjmp	.+18     	; 0x644 <vfprintf+0x256>
 632:	24 ff       	sbrs	r18, 4
 634:	0a c0       	rjmp	.+20     	; 0x64a <vfprintf+0x25c>
 636:	9f 2f       	mov	r25, r31
 638:	96 60       	ori	r25, 0x06	; 6
 63a:	b9 2e       	mov	r11, r25
 63c:	06 c0       	rjmp	.+12     	; 0x64a <vfprintf+0x25c>
 63e:	28 e0       	ldi	r18, 0x08	; 8
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	05 c0       	rjmp	.+10     	; 0x64e <vfprintf+0x260>
 644:	20 e1       	ldi	r18, 0x10	; 16
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <vfprintf+0x260>
 64a:	20 e1       	ldi	r18, 0x10	; 16
 64c:	32 e0       	ldi	r19, 0x02	; 2
 64e:	f8 01       	movw	r30, r16
 650:	b7 fe       	sbrs	r11, 7
 652:	07 c0       	rjmp	.+14     	; 0x662 <vfprintf+0x274>
 654:	60 81       	ld	r22, Z
 656:	71 81       	ldd	r23, Z+1	; 0x01
 658:	82 81       	ldd	r24, Z+2	; 0x02
 65a:	93 81       	ldd	r25, Z+3	; 0x03
 65c:	0c 5f       	subi	r16, 0xFC	; 252
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	06 c0       	rjmp	.+12     	; 0x66e <vfprintf+0x280>
 662:	60 81       	ld	r22, Z
 664:	71 81       	ldd	r23, Z+1	; 0x01
 666:	80 e0       	ldi	r24, 0x00	; 0
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 5f       	subi	r16, 0xFE	; 254
 66c:	1f 4f       	sbci	r17, 0xFF	; 255
 66e:	a4 01       	movw	r20, r8
 670:	0e 94 17 04 	call	0x82e	; 0x82e <__ultoa_invert>
 674:	a8 2e       	mov	r10, r24
 676:	a8 18       	sub	r10, r8
 678:	fb 2d       	mov	r31, r11
 67a:	ff 77       	andi	r31, 0x7F	; 127
 67c:	7f 2e       	mov	r7, r31
 67e:	76 fe       	sbrs	r7, 6
 680:	0b c0       	rjmp	.+22     	; 0x698 <vfprintf+0x2aa>
 682:	37 2d       	mov	r19, r7
 684:	3e 7f       	andi	r19, 0xFE	; 254
 686:	a5 14       	cp	r10, r5
 688:	50 f4       	brcc	.+20     	; 0x69e <vfprintf+0x2b0>
 68a:	74 fe       	sbrs	r7, 4
 68c:	0a c0       	rjmp	.+20     	; 0x6a2 <vfprintf+0x2b4>
 68e:	72 fc       	sbrc	r7, 2
 690:	08 c0       	rjmp	.+16     	; 0x6a2 <vfprintf+0x2b4>
 692:	37 2d       	mov	r19, r7
 694:	3e 7e       	andi	r19, 0xEE	; 238
 696:	05 c0       	rjmp	.+10     	; 0x6a2 <vfprintf+0x2b4>
 698:	ba 2c       	mov	r11, r10
 69a:	37 2d       	mov	r19, r7
 69c:	03 c0       	rjmp	.+6      	; 0x6a4 <vfprintf+0x2b6>
 69e:	ba 2c       	mov	r11, r10
 6a0:	01 c0       	rjmp	.+2      	; 0x6a4 <vfprintf+0x2b6>
 6a2:	b5 2c       	mov	r11, r5
 6a4:	34 ff       	sbrs	r19, 4
 6a6:	0d c0       	rjmp	.+26     	; 0x6c2 <vfprintf+0x2d4>
 6a8:	fe 01       	movw	r30, r28
 6aa:	ea 0d       	add	r30, r10
 6ac:	f1 1d       	adc	r31, r1
 6ae:	80 81       	ld	r24, Z
 6b0:	80 33       	cpi	r24, 0x30	; 48
 6b2:	11 f4       	brne	.+4      	; 0x6b8 <vfprintf+0x2ca>
 6b4:	39 7e       	andi	r19, 0xE9	; 233
 6b6:	09 c0       	rjmp	.+18     	; 0x6ca <vfprintf+0x2dc>
 6b8:	32 ff       	sbrs	r19, 2
 6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <vfprintf+0x2da>
 6bc:	b3 94       	inc	r11
 6be:	b3 94       	inc	r11
 6c0:	04 c0       	rjmp	.+8      	; 0x6ca <vfprintf+0x2dc>
 6c2:	83 2f       	mov	r24, r19
 6c4:	86 78       	andi	r24, 0x86	; 134
 6c6:	09 f0       	breq	.+2      	; 0x6ca <vfprintf+0x2dc>
 6c8:	b3 94       	inc	r11
 6ca:	33 fd       	sbrc	r19, 3
 6cc:	13 c0       	rjmp	.+38     	; 0x6f4 <vfprintf+0x306>
 6ce:	30 ff       	sbrs	r19, 0
 6d0:	06 c0       	rjmp	.+12     	; 0x6de <vfprintf+0x2f0>
 6d2:	5a 2c       	mov	r5, r10
 6d4:	b3 14       	cp	r11, r3
 6d6:	18 f4       	brcc	.+6      	; 0x6de <vfprintf+0x2f0>
 6d8:	53 0c       	add	r5, r3
 6da:	5b 18       	sub	r5, r11
 6dc:	b3 2c       	mov	r11, r3
 6de:	b3 14       	cp	r11, r3
 6e0:	68 f4       	brcc	.+26     	; 0x6fc <vfprintf+0x30e>
 6e2:	b7 01       	movw	r22, r14
 6e4:	80 e2       	ldi	r24, 0x20	; 32
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	3c 87       	std	Y+12, r19	; 0x0c
 6ea:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 6ee:	b3 94       	inc	r11
 6f0:	3c 85       	ldd	r19, Y+12	; 0x0c
 6f2:	f5 cf       	rjmp	.-22     	; 0x6de <vfprintf+0x2f0>
 6f4:	b3 14       	cp	r11, r3
 6f6:	10 f4       	brcc	.+4      	; 0x6fc <vfprintf+0x30e>
 6f8:	3b 18       	sub	r3, r11
 6fa:	01 c0       	rjmp	.+2      	; 0x6fe <vfprintf+0x310>
 6fc:	31 2c       	mov	r3, r1
 6fe:	34 ff       	sbrs	r19, 4
 700:	12 c0       	rjmp	.+36     	; 0x726 <vfprintf+0x338>
 702:	b7 01       	movw	r22, r14
 704:	80 e3       	ldi	r24, 0x30	; 48
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	3c 87       	std	Y+12, r19	; 0x0c
 70a:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 70e:	3c 85       	ldd	r19, Y+12	; 0x0c
 710:	32 ff       	sbrs	r19, 2
 712:	17 c0       	rjmp	.+46     	; 0x742 <vfprintf+0x354>
 714:	31 fd       	sbrc	r19, 1
 716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x330>
 718:	88 e7       	ldi	r24, 0x78	; 120
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <vfprintf+0x334>
 71e:	88 e5       	ldi	r24, 0x58	; 88
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	b7 01       	movw	r22, r14
 724:	0c c0       	rjmp	.+24     	; 0x73e <vfprintf+0x350>
 726:	83 2f       	mov	r24, r19
 728:	86 78       	andi	r24, 0x86	; 134
 72a:	59 f0       	breq	.+22     	; 0x742 <vfprintf+0x354>
 72c:	31 ff       	sbrs	r19, 1
 72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x346>
 730:	8b e2       	ldi	r24, 0x2B	; 43
 732:	01 c0       	rjmp	.+2      	; 0x736 <vfprintf+0x348>
 734:	80 e2       	ldi	r24, 0x20	; 32
 736:	37 fd       	sbrc	r19, 7
 738:	8d e2       	ldi	r24, 0x2D	; 45
 73a:	b7 01       	movw	r22, r14
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 742:	a5 14       	cp	r10, r5
 744:	38 f4       	brcc	.+14     	; 0x754 <vfprintf+0x366>
 746:	b7 01       	movw	r22, r14
 748:	80 e3       	ldi	r24, 0x30	; 48
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 750:	5a 94       	dec	r5
 752:	f7 cf       	rjmp	.-18     	; 0x742 <vfprintf+0x354>
 754:	aa 94       	dec	r10
 756:	f4 01       	movw	r30, r8
 758:	ea 0d       	add	r30, r10
 75a:	f1 1d       	adc	r31, r1
 75c:	80 81       	ld	r24, Z
 75e:	b7 01       	movw	r22, r14
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 766:	a1 10       	cpse	r10, r1
 768:	f5 cf       	rjmp	.-22     	; 0x754 <vfprintf+0x366>
 76a:	33 20       	and	r3, r3
 76c:	09 f4       	brne	.+2      	; 0x770 <vfprintf+0x382>
 76e:	51 ce       	rjmp	.-862    	; 0x412 <vfprintf+0x24>
 770:	b7 01       	movw	r22, r14
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 df 03 	call	0x7be	; 0x7be <fputc>
 77a:	3a 94       	dec	r3
 77c:	f6 cf       	rjmp	.-20     	; 0x76a <vfprintf+0x37c>
 77e:	f7 01       	movw	r30, r14
 780:	86 81       	ldd	r24, Z+6	; 0x06
 782:	97 81       	ldd	r25, Z+7	; 0x07
 784:	02 c0       	rjmp	.+4      	; 0x78a <vfprintf+0x39c>
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	9f ef       	ldi	r25, 0xFF	; 255
 78a:	2c 96       	adiw	r28, 0x0c	; 12
 78c:	e2 e1       	ldi	r30, 0x12	; 18
 78e:	0c 94 91 04 	jmp	0x922	; 0x922 <__epilogue_restores__>

00000792 <strnlen_P>:
 792:	fc 01       	movw	r30, r24
 794:	05 90       	lpm	r0, Z+
 796:	61 50       	subi	r22, 0x01	; 1
 798:	70 40       	sbci	r23, 0x00	; 0
 79a:	01 10       	cpse	r0, r1
 79c:	d8 f7       	brcc	.-10     	; 0x794 <strnlen_P+0x2>
 79e:	80 95       	com	r24
 7a0:	90 95       	com	r25
 7a2:	8e 0f       	add	r24, r30
 7a4:	9f 1f       	adc	r25, r31
 7a6:	08 95       	ret

000007a8 <strnlen>:
 7a8:	fc 01       	movw	r30, r24
 7aa:	61 50       	subi	r22, 0x01	; 1
 7ac:	70 40       	sbci	r23, 0x00	; 0
 7ae:	01 90       	ld	r0, Z+
 7b0:	01 10       	cpse	r0, r1
 7b2:	d8 f7       	brcc	.-10     	; 0x7aa <strnlen+0x2>
 7b4:	80 95       	com	r24
 7b6:	90 95       	com	r25
 7b8:	8e 0f       	add	r24, r30
 7ba:	9f 1f       	adc	r25, r31
 7bc:	08 95       	ret

000007be <fputc>:
 7be:	0f 93       	push	r16
 7c0:	1f 93       	push	r17
 7c2:	cf 93       	push	r28
 7c4:	df 93       	push	r29
 7c6:	fb 01       	movw	r30, r22
 7c8:	23 81       	ldd	r18, Z+3	; 0x03
 7ca:	21 fd       	sbrc	r18, 1
 7cc:	03 c0       	rjmp	.+6      	; 0x7d4 <fputc+0x16>
 7ce:	8f ef       	ldi	r24, 0xFF	; 255
 7d0:	9f ef       	ldi	r25, 0xFF	; 255
 7d2:	28 c0       	rjmp	.+80     	; 0x824 <fputc+0x66>
 7d4:	22 ff       	sbrs	r18, 2
 7d6:	16 c0       	rjmp	.+44     	; 0x804 <fputc+0x46>
 7d8:	46 81       	ldd	r20, Z+6	; 0x06
 7da:	57 81       	ldd	r21, Z+7	; 0x07
 7dc:	24 81       	ldd	r18, Z+4	; 0x04
 7de:	35 81       	ldd	r19, Z+5	; 0x05
 7e0:	42 17       	cp	r20, r18
 7e2:	53 07       	cpc	r21, r19
 7e4:	44 f4       	brge	.+16     	; 0x7f6 <fputc+0x38>
 7e6:	a0 81       	ld	r26, Z
 7e8:	b1 81       	ldd	r27, Z+1	; 0x01
 7ea:	9d 01       	movw	r18, r26
 7ec:	2f 5f       	subi	r18, 0xFF	; 255
 7ee:	3f 4f       	sbci	r19, 0xFF	; 255
 7f0:	31 83       	std	Z+1, r19	; 0x01
 7f2:	20 83       	st	Z, r18
 7f4:	8c 93       	st	X, r24
 7f6:	26 81       	ldd	r18, Z+6	; 0x06
 7f8:	37 81       	ldd	r19, Z+7	; 0x07
 7fa:	2f 5f       	subi	r18, 0xFF	; 255
 7fc:	3f 4f       	sbci	r19, 0xFF	; 255
 7fe:	37 83       	std	Z+7, r19	; 0x07
 800:	26 83       	std	Z+6, r18	; 0x06
 802:	10 c0       	rjmp	.+32     	; 0x824 <fputc+0x66>
 804:	eb 01       	movw	r28, r22
 806:	09 2f       	mov	r16, r25
 808:	18 2f       	mov	r17, r24
 80a:	00 84       	ldd	r0, Z+8	; 0x08
 80c:	f1 85       	ldd	r31, Z+9	; 0x09
 80e:	e0 2d       	mov	r30, r0
 810:	09 95       	icall
 812:	89 2b       	or	r24, r25
 814:	e1 f6       	brne	.-72     	; 0x7ce <fputc+0x10>
 816:	8e 81       	ldd	r24, Y+6	; 0x06
 818:	9f 81       	ldd	r25, Y+7	; 0x07
 81a:	01 96       	adiw	r24, 0x01	; 1
 81c:	9f 83       	std	Y+7, r25	; 0x07
 81e:	8e 83       	std	Y+6, r24	; 0x06
 820:	81 2f       	mov	r24, r17
 822:	90 2f       	mov	r25, r16
 824:	df 91       	pop	r29
 826:	cf 91       	pop	r28
 828:	1f 91       	pop	r17
 82a:	0f 91       	pop	r16
 82c:	08 95       	ret

0000082e <__ultoa_invert>:
 82e:	fa 01       	movw	r30, r20
 830:	aa 27       	eor	r26, r26
 832:	28 30       	cpi	r18, 0x08	; 8
 834:	51 f1       	breq	.+84     	; 0x88a <__ultoa_invert+0x5c>
 836:	20 31       	cpi	r18, 0x10	; 16
 838:	81 f1       	breq	.+96     	; 0x89a <__ultoa_invert+0x6c>
 83a:	e8 94       	clt
 83c:	6f 93       	push	r22
 83e:	6e 7f       	andi	r22, 0xFE	; 254
 840:	6e 5f       	subi	r22, 0xFE	; 254
 842:	7f 4f       	sbci	r23, 0xFF	; 255
 844:	8f 4f       	sbci	r24, 0xFF	; 255
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	af 4f       	sbci	r26, 0xFF	; 255
 84a:	b1 e0       	ldi	r27, 0x01	; 1
 84c:	3e d0       	rcall	.+124    	; 0x8ca <__ultoa_invert+0x9c>
 84e:	b4 e0       	ldi	r27, 0x04	; 4
 850:	3c d0       	rcall	.+120    	; 0x8ca <__ultoa_invert+0x9c>
 852:	67 0f       	add	r22, r23
 854:	78 1f       	adc	r23, r24
 856:	89 1f       	adc	r24, r25
 858:	9a 1f       	adc	r25, r26
 85a:	a1 1d       	adc	r26, r1
 85c:	68 0f       	add	r22, r24
 85e:	79 1f       	adc	r23, r25
 860:	8a 1f       	adc	r24, r26
 862:	91 1d       	adc	r25, r1
 864:	a1 1d       	adc	r26, r1
 866:	6a 0f       	add	r22, r26
 868:	71 1d       	adc	r23, r1
 86a:	81 1d       	adc	r24, r1
 86c:	91 1d       	adc	r25, r1
 86e:	a1 1d       	adc	r26, r1
 870:	20 d0       	rcall	.+64     	; 0x8b2 <__ultoa_invert+0x84>
 872:	09 f4       	brne	.+2      	; 0x876 <__ultoa_invert+0x48>
 874:	68 94       	set
 876:	3f 91       	pop	r19
 878:	2a e0       	ldi	r18, 0x0A	; 10
 87a:	26 9f       	mul	r18, r22
 87c:	11 24       	eor	r1, r1
 87e:	30 19       	sub	r19, r0
 880:	30 5d       	subi	r19, 0xD0	; 208
 882:	31 93       	st	Z+, r19
 884:	de f6       	brtc	.-74     	; 0x83c <__ultoa_invert+0xe>
 886:	cf 01       	movw	r24, r30
 888:	08 95       	ret
 88a:	46 2f       	mov	r20, r22
 88c:	47 70       	andi	r20, 0x07	; 7
 88e:	40 5d       	subi	r20, 0xD0	; 208
 890:	41 93       	st	Z+, r20
 892:	b3 e0       	ldi	r27, 0x03	; 3
 894:	0f d0       	rcall	.+30     	; 0x8b4 <__ultoa_invert+0x86>
 896:	c9 f7       	brne	.-14     	; 0x88a <__ultoa_invert+0x5c>
 898:	f6 cf       	rjmp	.-20     	; 0x886 <__ultoa_invert+0x58>
 89a:	46 2f       	mov	r20, r22
 89c:	4f 70       	andi	r20, 0x0F	; 15
 89e:	40 5d       	subi	r20, 0xD0	; 208
 8a0:	4a 33       	cpi	r20, 0x3A	; 58
 8a2:	18 f0       	brcs	.+6      	; 0x8aa <__ultoa_invert+0x7c>
 8a4:	49 5d       	subi	r20, 0xD9	; 217
 8a6:	31 fd       	sbrc	r19, 1
 8a8:	40 52       	subi	r20, 0x20	; 32
 8aa:	41 93       	st	Z+, r20
 8ac:	02 d0       	rcall	.+4      	; 0x8b2 <__ultoa_invert+0x84>
 8ae:	a9 f7       	brne	.-22     	; 0x89a <__ultoa_invert+0x6c>
 8b0:	ea cf       	rjmp	.-44     	; 0x886 <__ultoa_invert+0x58>
 8b2:	b4 e0       	ldi	r27, 0x04	; 4
 8b4:	a6 95       	lsr	r26
 8b6:	97 95       	ror	r25
 8b8:	87 95       	ror	r24
 8ba:	77 95       	ror	r23
 8bc:	67 95       	ror	r22
 8be:	ba 95       	dec	r27
 8c0:	c9 f7       	brne	.-14     	; 0x8b4 <__ultoa_invert+0x86>
 8c2:	00 97       	sbiw	r24, 0x00	; 0
 8c4:	61 05       	cpc	r22, r1
 8c6:	71 05       	cpc	r23, r1
 8c8:	08 95       	ret
 8ca:	9b 01       	movw	r18, r22
 8cc:	ac 01       	movw	r20, r24
 8ce:	0a 2e       	mov	r0, r26
 8d0:	06 94       	lsr	r0
 8d2:	57 95       	ror	r21
 8d4:	47 95       	ror	r20
 8d6:	37 95       	ror	r19
 8d8:	27 95       	ror	r18
 8da:	ba 95       	dec	r27
 8dc:	c9 f7       	brne	.-14     	; 0x8d0 <__ultoa_invert+0xa2>
 8de:	62 0f       	add	r22, r18
 8e0:	73 1f       	adc	r23, r19
 8e2:	84 1f       	adc	r24, r20
 8e4:	95 1f       	adc	r25, r21
 8e6:	a0 1d       	adc	r26, r0
 8e8:	08 95       	ret

000008ea <__prologue_saves__>:
 8ea:	2f 92       	push	r2
 8ec:	3f 92       	push	r3
 8ee:	4f 92       	push	r4
 8f0:	5f 92       	push	r5
 8f2:	6f 92       	push	r6
 8f4:	7f 92       	push	r7
 8f6:	8f 92       	push	r8
 8f8:	9f 92       	push	r9
 8fa:	af 92       	push	r10
 8fc:	bf 92       	push	r11
 8fe:	cf 92       	push	r12
 900:	df 92       	push	r13
 902:	ef 92       	push	r14
 904:	ff 92       	push	r15
 906:	0f 93       	push	r16
 908:	1f 93       	push	r17
 90a:	cf 93       	push	r28
 90c:	df 93       	push	r29
 90e:	cd b7       	in	r28, 0x3d	; 61
 910:	de b7       	in	r29, 0x3e	; 62
 912:	ca 1b       	sub	r28, r26
 914:	db 0b       	sbc	r29, r27
 916:	0f b6       	in	r0, 0x3f	; 63
 918:	f8 94       	cli
 91a:	de bf       	out	0x3e, r29	; 62
 91c:	0f be       	out	0x3f, r0	; 63
 91e:	cd bf       	out	0x3d, r28	; 61
 920:	09 94       	ijmp

00000922 <__epilogue_restores__>:
 922:	2a 88       	ldd	r2, Y+18	; 0x12
 924:	39 88       	ldd	r3, Y+17	; 0x11
 926:	48 88       	ldd	r4, Y+16	; 0x10
 928:	5f 84       	ldd	r5, Y+15	; 0x0f
 92a:	6e 84       	ldd	r6, Y+14	; 0x0e
 92c:	7d 84       	ldd	r7, Y+13	; 0x0d
 92e:	8c 84       	ldd	r8, Y+12	; 0x0c
 930:	9b 84       	ldd	r9, Y+11	; 0x0b
 932:	aa 84       	ldd	r10, Y+10	; 0x0a
 934:	b9 84       	ldd	r11, Y+9	; 0x09
 936:	c8 84       	ldd	r12, Y+8	; 0x08
 938:	df 80       	ldd	r13, Y+7	; 0x07
 93a:	ee 80       	ldd	r14, Y+6	; 0x06
 93c:	fd 80       	ldd	r15, Y+5	; 0x05
 93e:	0c 81       	ldd	r16, Y+4	; 0x04
 940:	1b 81       	ldd	r17, Y+3	; 0x03
 942:	aa 81       	ldd	r26, Y+2	; 0x02
 944:	b9 81       	ldd	r27, Y+1	; 0x01
 946:	ce 0f       	add	r28, r30
 948:	d1 1d       	adc	r29, r1
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	f8 94       	cli
 94e:	de bf       	out	0x3e, r29	; 62
 950:	0f be       	out	0x3f, r0	; 63
 952:	cd bf       	out	0x3d, r28	; 61
 954:	ed 01       	movw	r28, r26
 956:	08 95       	ret

00000958 <_exit>:
 958:	f8 94       	cli

0000095a <__stop_program>:
 95a:	ff cf       	rjmp	.-2      	; 0x95a <__stop_program>
